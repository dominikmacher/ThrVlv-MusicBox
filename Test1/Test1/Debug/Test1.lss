
Test1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00001684  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001610  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000005  00800100  00800100  00001684  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00001684  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000016b4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000090  00000000  00000000  000016f4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000ad7  00000000  00000000  00001784  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000785  00000000  00000000  0000225b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000497  00000000  00000000  000029e0  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000164  00000000  00000000  00002e78  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004b8  00000000  00000000  00002fdc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000453  00000000  00000000  00003494  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000080  00000000  00000000  000038e7  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 94 09 	jmp	0x1328	; 0x1328 <__ctors_end>
       4:	0c 94 a4 09 	jmp	0x1348	; 0x1348 <__bad_interrupt>
       8:	0c 94 a4 09 	jmp	0x1348	; 0x1348 <__bad_interrupt>
       c:	0c 94 a4 09 	jmp	0x1348	; 0x1348 <__bad_interrupt>
      10:	0c 94 a4 09 	jmp	0x1348	; 0x1348 <__bad_interrupt>
      14:	0c 94 a4 09 	jmp	0x1348	; 0x1348 <__bad_interrupt>
      18:	0c 94 a4 09 	jmp	0x1348	; 0x1348 <__bad_interrupt>
      1c:	0c 94 a4 09 	jmp	0x1348	; 0x1348 <__bad_interrupt>
      20:	0c 94 a4 09 	jmp	0x1348	; 0x1348 <__bad_interrupt>
      24:	0c 94 a4 09 	jmp	0x1348	; 0x1348 <__bad_interrupt>
      28:	0c 94 a4 09 	jmp	0x1348	; 0x1348 <__bad_interrupt>
      2c:	0c 94 a4 09 	jmp	0x1348	; 0x1348 <__bad_interrupt>
      30:	0c 94 a4 09 	jmp	0x1348	; 0x1348 <__bad_interrupt>
      34:	0c 94 a4 09 	jmp	0x1348	; 0x1348 <__bad_interrupt>
      38:	0c 94 13 0a 	jmp	0x1426	; 0x1426 <__vector_14>
      3c:	0c 94 a4 09 	jmp	0x1348	; 0x1348 <__bad_interrupt>
      40:	0c 94 a4 09 	jmp	0x1348	; 0x1348 <__bad_interrupt>
      44:	0c 94 a4 09 	jmp	0x1348	; 0x1348 <__bad_interrupt>
      48:	0c 94 a4 09 	jmp	0x1348	; 0x1348 <__bad_interrupt>
      4c:	0c 94 a4 09 	jmp	0x1348	; 0x1348 <__bad_interrupt>
      50:	0c 94 a4 09 	jmp	0x1348	; 0x1348 <__bad_interrupt>
      54:	0c 94 a4 09 	jmp	0x1348	; 0x1348 <__bad_interrupt>
      58:	0c 94 a4 09 	jmp	0x1348	; 0x1348 <__bad_interrupt>
      5c:	0c 94 a4 09 	jmp	0x1348	; 0x1348 <__bad_interrupt>
      60:	0c 94 a4 09 	jmp	0x1348	; 0x1348 <__bad_interrupt>
      64:	0c 94 a4 09 	jmp	0x1348	; 0x1348 <__bad_interrupt>

00000068 <__trampolines_end>:
      68:	34 00       	.word	0x0034	; ????
      6a:	bb 02       	muls	r27, r27
      6c:	06 00       	.word	0x0006	; ????
      6e:	0b 02       	muls	r16, r27
      70:	03 00       	.word	0x0003	; ????
      72:	bb 02       	muls	r27, r27
      74:	0f 00       	.word	0x000f	; ????
      76:	d2 01       	movw	r26, r4
      78:	03 00       	.word	0x0003	; ????
      7a:	0b 02       	muls	r16, r27
      7c:	06 00       	.word	0x0006	; ????
      7e:	5d 01       	movw	r10, r26
      80:	0c 00       	.word	0x000c	; ????
      82:	b8 01       	movw	r22, r16
      84:	01 00       	.word	0x0001	; ????
      86:	0b 02       	muls	r16, r27
      88:	01 00       	.word	0x0001	; ????
      8a:	bb 02       	muls	r27, r27
      8c:	03 00       	.word	0x0003	; ????
      8e:	0b 02       	muls	r16, r27
      90:	03 00       	.word	0x0003	; ????
      92:	10 03       	mulsu	r17, r16
      94:	03 00       	.word	0x0003	; ????
      96:	bb 02       	muls	r27, r27
      98:	0f 00       	.word	0x000f	; ????
      9a:	6e 02       	muls	r22, r30
      9c:	04 00       	.word	0x0004	; ????
      9e:	4b 02       	muls	r20, r27
      a0:	01 00       	.word	0x0001	; ????
      a2:	0b 02       	muls	r16, r27
      a4:	01 00       	.word	0x0001	; ????
      a6:	d2 01       	movw	r26, r4
      a8:	04 00       	.word	0x0004	; ????
      aa:	0b 02       	muls	r16, r27
      ac:	0c 00       	.word	0x000c	; ????
      ae:	bb 02       	muls	r27, r27
      b0:	04 00       	.word	0x0004	; ????
      b2:	bb 02       	muls	r27, r27
      b4:	01 00       	.word	0x0001	; ????
      b6:	0b 02       	muls	r16, r27
      b8:	03 00       	.word	0x0003	; ????
      ba:	bb 02       	muls	r27, r27
      bc:	0f 00       	.word	0x000f	; ????
      be:	b8 01       	movw	r22, r16
      c0:	03 00       	.word	0x0003	; ????
      c2:	d2 01       	movw	r26, r4
      c4:	06 00       	.word	0x0006	; ????
      c6:	0b 02       	muls	r16, r27
      c8:	03 00       	.word	0x0003	; ????
      ca:	5d 01       	movw	r10, r26
      cc:	0c 00       	.word	0x000c	; ????
      ce:	9f 01       	movw	r18, r30
      d0:	04 00       	.word	0x0004	; ????
      d2:	d2 01       	movw	r26, r4
      d4:	01 00       	.word	0x0001	; ????
      d6:	2a 02       	muls	r18, r26
      d8:	03 00       	.word	0x0003	; ????
      da:	6e 02       	muls	r22, r30
      dc:	12 00       	.word	0x0012	; ????
      de:	00 00       	nop
      e0:	04 00       	.word	0x0004	; ????
      e2:	6e 02       	muls	r22, r30
      e4:	03 00       	.word	0x0003	; ????
      e6:	4b 02       	muls	r20, r27
      e8:	06 00       	.word	0x0006	; ????
      ea:	d2 01       	movw	r26, r4
      ec:	03 00       	.word	0x0003	; ????
      ee:	6e 02       	muls	r22, r30
      f0:	06 00       	.word	0x0006	; ????
      f2:	4b 02       	muls	r20, r27
      f4:	06 00       	.word	0x0006	; ????
      f6:	b8 01       	movw	r22, r16
      f8:	04 00       	.word	0x0004	; ????
      fa:	d2 01       	movw	r26, r4
      fc:	01 00       	.word	0x0001	; ????
      fe:	0b 02       	muls	r16, r27
     100:	03 00       	.word	0x0003	; ????
     102:	bb 02       	muls	r27, r27
     104:	0f 00       	.word	0x000f	; ????
     106:	0b 02       	muls	r16, r27
     108:	03 00       	.word	0x0003	; ????
     10a:	d2 01       	movw	r26, r4
     10c:	06 00       	.word	0x0006	; ????
     10e:	5d 01       	movw	r10, r26
     110:	03 00       	.word	0x0003	; ????
     112:	0b 02       	muls	r16, r27
     114:	06 00       	.word	0x0006	; ????
     116:	d2 01       	movw	r26, r4
     118:	06 00       	.word	0x0006	; ????
     11a:	d2 01       	movw	r26, r4
     11c:	03 00       	.word	0x0003	; ????
     11e:	b8 01       	movw	r22, r16
     120:	03 00       	.word	0x0003	; ????
     122:	5d 01       	movw	r10, r26
     124:	03 00       	.word	0x0003	; ????
     126:	49 01       	movw	r8, r18
     128:	03 00       	.word	0x0003	; ????
     12a:	5d 01       	movw	r10, r26
     12c:	0c 00       	.word	0x000c	; ????
     12e:	00 00       	nop
     130:	04 00       	.word	0x0004	; ????
     132:	00 00       	nop
     134:	04 00       	.word	0x0004	; ????
     136:	00 00       	nop
     138:	04 00       	.word	0x0004	; ????
	...
     386:	00 00       	nop
     388:	49 00       	.word	0x0049	; ????
     38a:	88 01       	movw	r16, r16
     38c:	08 00       	.word	0x0008	; ????
     38e:	88 01       	movw	r16, r16
     390:	08 00       	.word	0x0008	; ????
     392:	88 01       	movw	r16, r16
     394:	08 00       	.word	0x0008	; ????
     396:	37 01       	movw	r6, r14
     398:	06 00       	.word	0x0006	; ????
     39a:	d2 01       	movw	r26, r4
     39c:	02 00       	.word	0x0002	; ????
     39e:	88 01       	movw	r16, r16
     3a0:	08 00       	.word	0x0008	; ????
     3a2:	37 01       	movw	r6, r14
     3a4:	06 00       	.word	0x0006	; ????
     3a6:	d2 01       	movw	r26, r4
     3a8:	02 00       	.word	0x0002	; ????
     3aa:	88 01       	movw	r16, r16
     3ac:	10 00       	.word	0x0010	; ????
     3ae:	4b 02       	muls	r20, r27
     3b0:	08 00       	.word	0x0008	; ????
     3b2:	4b 02       	muls	r20, r27
     3b4:	08 00       	.word	0x0008	; ????
     3b6:	4b 02       	muls	r20, r27
     3b8:	08 00       	.word	0x0008	; ????
     3ba:	6e 02       	muls	r22, r30
     3bc:	06 00       	.word	0x0006	; ????
     3be:	d2 01       	movw	r26, r4
     3c0:	02 00       	.word	0x0002	; ????
     3c2:	72 01       	movw	r14, r4
     3c4:	08 00       	.word	0x0008	; ????
     3c6:	37 01       	movw	r6, r14
     3c8:	06 00       	.word	0x0006	; ????
     3ca:	d2 01       	movw	r26, r4
     3cc:	02 00       	.word	0x0002	; ????
     3ce:	88 01       	movw	r16, r16
     3d0:	10 00       	.word	0x0010	; ????
     3d2:	10 03       	mulsu	r17, r16
     3d4:	08 00       	.word	0x0008	; ????
     3d6:	88 01       	movw	r16, r16
     3d8:	06 00       	.word	0x0006	; ????
     3da:	88 01       	movw	r16, r16
     3dc:	02 00       	.word	0x0002	; ????
     3de:	10 03       	mulsu	r17, r16
     3e0:	08 00       	.word	0x0008	; ????
     3e2:	e4 02       	muls	r30, r20
     3e4:	06 00       	.word	0x0006	; ????
     3e6:	bb 02       	muls	r27, r27
     3e8:	02 00       	.word	0x0002	; ????
     3ea:	93 02       	muls	r25, r19
     3ec:	02 00       	.word	0x0002	; ????
     3ee:	6e 02       	muls	r22, r30
     3f0:	02 00       	.word	0x0002	; ????
     3f2:	93 02       	muls	r25, r19
     3f4:	04 00       	.word	0x0004	; ????
     3f6:	00 00       	nop
     3f8:	04 00       	.word	0x0004	; ????
     3fa:	9f 01       	movw	r18, r30
     3fc:	04 00       	.word	0x0004	; ????
     3fe:	2a 02       	muls	r18, r26
     400:	08 00       	.word	0x0008	; ????
     402:	0b 02       	muls	r16, r27
     404:	06 00       	.word	0x0006	; ????
     406:	ed 01       	movw	r28, r26
     408:	02 00       	.word	0x0002	; ????
     40a:	d2 01       	movw	r26, r4
     40c:	02 00       	.word	0x0002	; ????
     40e:	b8 01       	movw	r22, r16
     410:	02 00       	.word	0x0002	; ????
     412:	d2 01       	movw	r26, r4
     414:	02 00       	.word	0x0002	; ????
     416:	00 00       	nop
     418:	04 00       	.word	0x0004	; ????
     41a:	37 01       	movw	r6, r14
     41c:	04 00       	.word	0x0004	; ????
     41e:	72 01       	movw	r14, r4
     420:	08 00       	.word	0x0008	; ????
     422:	37 01       	movw	r6, r14
     424:	06 00       	.word	0x0006	; ????
     426:	72 01       	movw	r14, r4
     428:	02 00       	.word	0x0002	; ????
     42a:	d2 01       	movw	r26, r4
     42c:	08 00       	.word	0x0008	; ????
     42e:	88 01       	movw	r16, r16
     430:	06 00       	.word	0x0006	; ????
     432:	d2 01       	movw	r26, r4
     434:	02 00       	.word	0x0002	; ????
     436:	4b 02       	muls	r20, r27
     438:	10 00       	.word	0x0010	; ????
     43a:	10 03       	mulsu	r17, r16
     43c:	08 00       	.word	0x0008	; ????
     43e:	88 01       	movw	r16, r16
     440:	06 00       	.word	0x0006	; ????
     442:	88 01       	movw	r16, r16
     444:	02 00       	.word	0x0002	; ????
     446:	10 03       	mulsu	r17, r16
     448:	08 00       	.word	0x0008	; ????
     44a:	e4 02       	muls	r30, r20
     44c:	06 00       	.word	0x0006	; ????
     44e:	bb 02       	muls	r27, r27
     450:	02 00       	.word	0x0002	; ????
     452:	93 02       	muls	r25, r19
     454:	02 00       	.word	0x0002	; ????
     456:	6e 02       	muls	r22, r30
     458:	02 00       	.word	0x0002	; ????
     45a:	93 02       	muls	r25, r19
     45c:	04 00       	.word	0x0004	; ????
     45e:	00 00       	nop
     460:	04 00       	.word	0x0004	; ????
     462:	9f 01       	movw	r18, r30
     464:	04 00       	.word	0x0004	; ????
     466:	2a 02       	muls	r18, r26
     468:	08 00       	.word	0x0008	; ????
     46a:	0b 02       	muls	r16, r27
     46c:	06 00       	.word	0x0006	; ????
     46e:	ed 01       	movw	r28, r26
     470:	02 00       	.word	0x0002	; ????
     472:	d2 01       	movw	r26, r4
     474:	02 00       	.word	0x0002	; ????
     476:	b8 01       	movw	r22, r16
     478:	02 00       	.word	0x0002	; ????
     47a:	d2 01       	movw	r26, r4
     47c:	02 00       	.word	0x0002	; ????
     47e:	00 00       	nop
     480:	04 00       	.word	0x0004	; ????
     482:	37 01       	movw	r6, r14
     484:	04 00       	.word	0x0004	; ????
     486:	72 01       	movw	r14, r4
     488:	08 00       	.word	0x0008	; ????
     48a:	37 01       	movw	r6, r14
     48c:	06 00       	.word	0x0006	; ????
     48e:	d2 01       	movw	r26, r4
     490:	02 00       	.word	0x0002	; ????
     492:	88 01       	movw	r16, r16
     494:	08 00       	.word	0x0008	; ????
     496:	37 01       	movw	r6, r14
     498:	06 00       	.word	0x0006	; ????
     49a:	d2 01       	movw	r26, r4
     49c:	02 00       	.word	0x0002	; ????
     49e:	88 01       	movw	r16, r16
     4a0:	10 00       	.word	0x0010	; ????
     4a2:	00 00       	nop
     4a4:	04 00       	.word	0x0004	; ????
     4a6:	00 00       	nop
     4a8:	04 00       	.word	0x0004	; ????
     4aa:	00 00       	nop
     4ac:	04 00       	.word	0x0004	; ????
	...
     6a6:	00 00       	nop
     6a8:	3c 00       	.word	0x003c	; ????
     6aa:	88 01       	movw	r16, r16
     6ac:	0c 00       	.word	0x000c	; ????
     6ae:	05 01       	movw	r0, r10
     6b0:	0c 00       	.word	0x000c	; ????
     6b2:	37 01       	movw	r6, r14
     6b4:	02 00       	.word	0x0002	; ????
     6b6:	5d 01       	movw	r10, r26
     6b8:	02 00       	.word	0x0002	; ????
     6ba:	88 01       	movw	r16, r16
     6bc:	08 00       	.word	0x0008	; ????
     6be:	05 01       	movw	r0, r10
     6c0:	08 00       	.word	0x0008	; ????
     6c2:	37 01       	movw	r6, r14
     6c4:	02 00       	.word	0x0002	; ????
     6c6:	5d 01       	movw	r10, r26
     6c8:	02 00       	.word	0x0002	; ????
     6ca:	26 01       	movw	r4, r12
     6cc:	24 00       	.word	0x0024	; ????
     6ce:	00 00       	nop
     6d0:	04 00       	.word	0x0004	; ????
     6d2:	5d 01       	movw	r10, r26
     6d4:	0c 00       	.word	0x000c	; ????
     6d6:	e9 00       	.word	0x00e9	; ????
     6d8:	0c 00       	.word	0x000c	; ????
     6da:	37 01       	movw	r6, r14
     6dc:	02 00       	.word	0x0002	; ????
     6de:	26 01       	movw	r4, r12
     6e0:	02 00       	.word	0x0002	; ????
     6e2:	5d 01       	movw	r10, r26
     6e4:	08 00       	.word	0x0008	; ????
     6e6:	e9 00       	.word	0x00e9	; ????
     6e8:	08 00       	.word	0x0008	; ????
     6ea:	37 01       	movw	r6, r14
     6ec:	02 00       	.word	0x0002	; ????
     6ee:	26 01       	movw	r4, r12
     6f0:	02 00       	.word	0x0002	; ????
     6f2:	05 01       	movw	r0, r10
     6f4:	24 00       	.word	0x0024	; ????
     6f6:	00 00       	nop
     6f8:	04 00       	.word	0x0004	; ????
     6fa:	10 03       	mulsu	r17, r16
     6fc:	0c 00       	.word	0x000c	; ????
     6fe:	0b 02       	muls	r16, r27
     700:	0c 00       	.word	0x000c	; ????
     702:	6e 02       	muls	r22, r30
     704:	02 00       	.word	0x0002	; ????
     706:	bb 02       	muls	r27, r27
     708:	02 00       	.word	0x0002	; ????
     70a:	10 03       	mulsu	r17, r16
     70c:	08 00       	.word	0x0008	; ????
     70e:	0b 02       	muls	r16, r27
     710:	08 00       	.word	0x0008	; ????
     712:	6e 02       	muls	r22, r30
     714:	02 00       	.word	0x0002	; ????
     716:	bb 02       	muls	r27, r27
     718:	02 00       	.word	0x0002	; ????
     71a:	4b 02       	muls	r20, r27
     71c:	24 00       	.word	0x0024	; ????
     71e:	00 00       	nop
     720:	04 00       	.word	0x0004	; ????
     722:	bb 02       	muls	r27, r27
     724:	0c 00       	.word	0x000c	; ????
     726:	d2 01       	movw	r26, r4
     728:	0c 00       	.word	0x000c	; ????
     72a:	6e 02       	muls	r22, r30
     72c:	02 00       	.word	0x0002	; ????
     72e:	4b 02       	muls	r20, r27
     730:	02 00       	.word	0x0002	; ????
     732:	bb 02       	muls	r27, r27
     734:	08 00       	.word	0x0008	; ????
     736:	d2 01       	movw	r26, r4
     738:	08 00       	.word	0x0008	; ????
     73a:	6e 02       	muls	r22, r30
     73c:	02 00       	.word	0x0002	; ????
     73e:	4b 02       	muls	r20, r27
     740:	02 00       	.word	0x0002	; ????
     742:	0b 02       	muls	r16, r27
     744:	24 00       	.word	0x0024	; ????
     746:	00 00       	nop
     748:	04 00       	.word	0x0004	; ????
     74a:	10 03       	mulsu	r17, r16
     74c:	0c 00       	.word	0x000c	; ????
     74e:	0b 02       	muls	r16, r27
     750:	0c 00       	.word	0x000c	; ????
     752:	6e 02       	muls	r22, r30
     754:	02 00       	.word	0x0002	; ????
     756:	bb 02       	muls	r27, r27
     758:	02 00       	.word	0x0002	; ????
     75a:	10 03       	mulsu	r17, r16
     75c:	08 00       	.word	0x0008	; ????
     75e:	0b 02       	muls	r16, r27
     760:	08 00       	.word	0x0008	; ????
     762:	6e 02       	muls	r22, r30
     764:	02 00       	.word	0x0002	; ????
     766:	bb 02       	muls	r27, r27
     768:	02 00       	.word	0x0002	; ????
     76a:	4b 02       	muls	r20, r27
     76c:	24 00       	.word	0x0024	; ????
     76e:	00 00       	nop
     770:	04 00       	.word	0x0004	; ????
     772:	bb 02       	muls	r27, r27
     774:	0c 00       	.word	0x000c	; ????
     776:	d2 01       	movw	r26, r4
     778:	0c 00       	.word	0x000c	; ????
     77a:	4b 02       	muls	r20, r27
     77c:	08 00       	.word	0x0008	; ????
     77e:	6e 02       	muls	r22, r30
     780:	04 00       	.word	0x0004	; ????
     782:	4b 02       	muls	r20, r27
     784:	08 00       	.word	0x0008	; ????
     786:	d2 01       	movw	r26, r4
     788:	04 00       	.word	0x0004	; ????
     78a:	0b 02       	muls	r16, r27
     78c:	24 00       	.word	0x0024	; ????
     78e:	00 00       	nop
     790:	04 00       	.word	0x0004	; ????
     792:	00 00       	nop
     794:	08 00       	.word	0x0008	; ????
     796:	00 00       	nop
     798:	08 00       	.word	0x0008	; ????
	...
     9c6:	00 00       	nop
     9c8:	72 00       	.word	0x0072	; ????
     9ca:	26 01       	movw	r4, r12
     9cc:	0e 00       	.word	0x000e	; ????
     9ce:	88 01       	movw	r16, r16
     9d0:	1c 00       	.word	0x001c	; ????
     9d2:	72 01       	movw	r14, r4
     9d4:	07 00       	.word	0x0007	; ????
     9d6:	b8 01       	movw	r22, r16
     9d8:	07 00       	.word	0x0007	; ????
     9da:	88 01       	movw	r16, r16
     9dc:	31 00       	.word	0x0031	; ????
     9de:	b8 01       	movw	r22, r16
     9e0:	07 00       	.word	0x0007	; ????
     9e2:	ed 01       	movw	r28, r26
     9e4:	04 00       	.word	0x0004	; ????
     9e6:	ed 01       	movw	r28, r26
     9e8:	05 00       	.word	0x0005	; ????
     9ea:	ed 01       	movw	r28, r26
     9ec:	05 00       	.word	0x0005	; ????
     9ee:	ed 01       	movw	r28, r26
     9f0:	1c 00       	.word	0x001c	; ????
     9f2:	b8 01       	movw	r22, r16
     9f4:	04 00       	.word	0x0004	; ????
     9f6:	0b 02       	muls	r16, r27
     9f8:	05 00       	.word	0x0005	; ????
     9fa:	ed 01       	movw	r28, r26
     9fc:	05 00       	.word	0x0005	; ????
     9fe:	88 01       	movw	r16, r16
     a00:	15 00       	.word	0x0015	; ????
     a02:	10 03       	mulsu	r17, r16
     a04:	07 00       	.word	0x0007	; ????
     a06:	e4 02       	muls	r30, r20
     a08:	04 00       	.word	0x0004	; ????
     a0a:	4b 02       	muls	r20, r27
     a0c:	05 00       	.word	0x0005	; ????
     a0e:	10 03       	mulsu	r17, r16
     a10:	05 00       	.word	0x0005	; ????
     a12:	e4 02       	muls	r30, r20
     a14:	04 00       	.word	0x0004	; ????
     a16:	4b 02       	muls	r20, r27
     a18:	05 00       	.word	0x0005	; ????
     a1a:	ed 01       	movw	r28, r26
     a1c:	05 00       	.word	0x0005	; ????
     a1e:	4b 02       	muls	r20, r27
     a20:	1c 00       	.word	0x001c	; ????
     a22:	b8 01       	movw	r22, r16
     a24:	04 00       	.word	0x0004	; ????
     a26:	0b 02       	muls	r16, r27
     a28:	05 00       	.word	0x0005	; ????
     a2a:	ed 01       	movw	r28, r26
     a2c:	05 00       	.word	0x0005	; ????
     a2e:	b8 01       	movw	r22, r16
     a30:	04 00       	.word	0x0004	; ????
     a32:	88 01       	movw	r16, r16
     a34:	05 00       	.word	0x0005	; ????
     a36:	72 01       	movw	r14, r4
     a38:	05 00       	.word	0x0005	; ????
     a3a:	26 01       	movw	r4, r12
     a3c:	0e 00       	.word	0x000e	; ????
     a3e:	88 01       	movw	r16, r16
     a40:	1c 00       	.word	0x001c	; ????
     a42:	72 01       	movw	r14, r4
     a44:	07 00       	.word	0x0007	; ????
     a46:	b8 01       	movw	r22, r16
     a48:	07 00       	.word	0x0007	; ????
     a4a:	88 01       	movw	r16, r16
     a4c:	31 00       	.word	0x0031	; ????
     a4e:	b8 01       	movw	r22, r16
     a50:	07 00       	.word	0x0007	; ????
     a52:	ed 01       	movw	r28, r26
     a54:	04 00       	.word	0x0004	; ????
     a56:	ed 01       	movw	r28, r26
     a58:	05 00       	.word	0x0005	; ????
     a5a:	ed 01       	movw	r28, r26
     a5c:	05 00       	.word	0x0005	; ????
     a5e:	ed 01       	movw	r28, r26
     a60:	1c 00       	.word	0x001c	; ????
     a62:	b8 01       	movw	r22, r16
     a64:	04 00       	.word	0x0004	; ????
     a66:	0b 02       	muls	r16, r27
     a68:	05 00       	.word	0x0005	; ????
     a6a:	ed 01       	movw	r28, r26
     a6c:	05 00       	.word	0x0005	; ????
     a6e:	88 01       	movw	r16, r16
     a70:	15 00       	.word	0x0015	; ????
     a72:	10 03       	mulsu	r17, r16
     a74:	07 00       	.word	0x0007	; ????
     a76:	e4 02       	muls	r30, r20
     a78:	04 00       	.word	0x0004	; ????
     a7a:	4b 02       	muls	r20, r27
     a7c:	05 00       	.word	0x0005	; ????
     a7e:	10 03       	mulsu	r17, r16
     a80:	05 00       	.word	0x0005	; ????
     a82:	e4 02       	muls	r30, r20
     a84:	04 00       	.word	0x0004	; ????
     a86:	4b 02       	muls	r20, r27
     a88:	05 00       	.word	0x0005	; ????
     a8a:	ed 01       	movw	r28, r26
     a8c:	05 00       	.word	0x0005	; ????
     a8e:	4b 02       	muls	r20, r27
     a90:	1c 00       	.word	0x001c	; ????
     a92:	b8 01       	movw	r22, r16
     a94:	04 00       	.word	0x0004	; ????
     a96:	0b 02       	muls	r16, r27
     a98:	05 00       	.word	0x0005	; ????
     a9a:	ed 01       	movw	r28, r26
     a9c:	05 00       	.word	0x0005	; ????
     a9e:	b8 01       	movw	r22, r16
     aa0:	04 00       	.word	0x0004	; ????
     aa2:	88 01       	movw	r16, r16
     aa4:	05 00       	.word	0x0005	; ????
     aa6:	72 01       	movw	r14, r4
     aa8:	05 00       	.word	0x0005	; ????
     aaa:	49 01       	movw	r8, r18
     aac:	07 00       	.word	0x0007	; ????
     aae:	b8 01       	movw	r22, r16
     ab0:	07 00       	.word	0x0007	; ????
     ab2:	b8 01       	movw	r22, r16
     ab4:	1c 00       	.word	0x001c	; ????
     ab6:	9f 01       	movw	r18, r30
     ab8:	07 00       	.word	0x0007	; ????
     aba:	ed 01       	movw	r28, r26
     abc:	07 00       	.word	0x0007	; ????
     abe:	b8 01       	movw	r22, r16
     ac0:	31 00       	.word	0x0031	; ????
     ac2:	ed 01       	movw	r28, r26
     ac4:	07 00       	.word	0x0007	; ????
     ac6:	2a 02       	muls	r18, r26
     ac8:	04 00       	.word	0x0004	; ????
     aca:	2a 02       	muls	r18, r26
     acc:	05 00       	.word	0x0005	; ????
     ace:	2a 02       	muls	r18, r26
     ad0:	05 00       	.word	0x0005	; ????
     ad2:	2a 02       	muls	r18, r26
     ad4:	1c 00       	.word	0x001c	; ????
     ad6:	ed 01       	movw	r28, r26
     ad8:	04 00       	.word	0x0004	; ????
     ada:	4b 02       	muls	r20, r27
     adc:	05 00       	.word	0x0005	; ????
     ade:	2a 02       	muls	r18, r26
     ae0:	05 00       	.word	0x0005	; ????
     ae2:	b8 01       	movw	r22, r16
     ae4:	15 00       	.word	0x0015	; ????
     ae6:	70 03       	mulsu	r23, r16
     ae8:	07 00       	.word	0x0007	; ????
     aea:	3e 03       	fmul	r19, r22
     aec:	04 00       	.word	0x0004	; ????
     aee:	93 02       	muls	r25, r19
     af0:	05 00       	.word	0x0005	; ????
     af2:	70 03       	mulsu	r23, r16
     af4:	05 00       	.word	0x0005	; ????
     af6:	3e 03       	fmul	r19, r22
     af8:	04 00       	.word	0x0004	; ????
     afa:	93 02       	muls	r25, r19
     afc:	05 00       	.word	0x0005	; ????
     afe:	2a 02       	muls	r18, r26
     b00:	05 00       	.word	0x0005	; ????
     b02:	93 02       	muls	r25, r19
     b04:	1c 00       	.word	0x001c	; ????
     b06:	ed 01       	movw	r28, r26
     b08:	04 00       	.word	0x0004	; ????
     b0a:	4b 02       	muls	r20, r27
     b0c:	05 00       	.word	0x0005	; ????
     b0e:	2a 02       	muls	r18, r26
     b10:	05 00       	.word	0x0005	; ????
     b12:	ed 01       	movw	r28, r26
     b14:	04 00       	.word	0x0004	; ????
     b16:	b8 01       	movw	r22, r16
     b18:	05 00       	.word	0x0005	; ????
     b1a:	9f 01       	movw	r18, r30
     b1c:	05 00       	.word	0x0005	; ????
     b1e:	49 01       	movw	r8, r18
     b20:	07 00       	.word	0x0007	; ????
     b22:	b8 01       	movw	r22, r16
     b24:	07 00       	.word	0x0007	; ????
     b26:	b8 01       	movw	r22, r16
     b28:	1c 00       	.word	0x001c	; ????
     b2a:	9f 01       	movw	r18, r30
     b2c:	07 00       	.word	0x0007	; ????
     b2e:	ed 01       	movw	r28, r26
     b30:	07 00       	.word	0x0007	; ????
     b32:	b8 01       	movw	r22, r16
     b34:	31 00       	.word	0x0031	; ????
     b36:	ed 01       	movw	r28, r26
     b38:	07 00       	.word	0x0007	; ????
     b3a:	2a 02       	muls	r18, r26
     b3c:	04 00       	.word	0x0004	; ????
     b3e:	2a 02       	muls	r18, r26
     b40:	05 00       	.word	0x0005	; ????
     b42:	2a 02       	muls	r18, r26
     b44:	05 00       	.word	0x0005	; ????
     b46:	2a 02       	muls	r18, r26
     b48:	1c 00       	.word	0x001c	; ????
     b4a:	ed 01       	movw	r28, r26
     b4c:	04 00       	.word	0x0004	; ????
     b4e:	4b 02       	muls	r20, r27
     b50:	05 00       	.word	0x0005	; ????
     b52:	2a 02       	muls	r18, r26
     b54:	05 00       	.word	0x0005	; ????
     b56:	b8 01       	movw	r22, r16
     b58:	15 00       	.word	0x0015	; ????
     b5a:	70 03       	mulsu	r23, r16
     b5c:	07 00       	.word	0x0007	; ????
     b5e:	3e 03       	fmul	r19, r22
     b60:	04 00       	.word	0x0004	; ????
     b62:	93 02       	muls	r25, r19
     b64:	05 00       	.word	0x0005	; ????
     b66:	70 03       	mulsu	r23, r16
     b68:	05 00       	.word	0x0005	; ????
     b6a:	3e 03       	fmul	r19, r22
     b6c:	04 00       	.word	0x0004	; ????
     b6e:	93 02       	muls	r25, r19
     b70:	05 00       	.word	0x0005	; ????
     b72:	2a 02       	muls	r18, r26
     b74:	05 00       	.word	0x0005	; ????
     b76:	93 02       	muls	r25, r19
     b78:	1c 00       	.word	0x001c	; ????
     b7a:	e4 02       	muls	r30, r20
     b7c:	0e 00       	.word	0x000e	; ????
     b7e:	3e 03       	fmul	r19, r22
     b80:	0e 00       	.word	0x000e	; ????
     b82:	70 03       	mulsu	r23, r16
     b84:	2a 00       	.word	0x002a	; ????
     b86:	00 00       	nop
     b88:	08 00       	.word	0x0008	; ????
     b8a:	00 00       	nop
     b8c:	08 00       	.word	0x0008	; ????
     b8e:	00 00       	nop
     b90:	08 00       	.word	0x0008	; ????
	...
     cea:	26 01       	movw	r4, r12
     cec:	0e 00       	.word	0x000e	; ????
     cee:	88 01       	movw	r16, r16
     cf0:	1c 00       	.word	0x001c	; ????
	...
    1006:	00 00       	nop
    1008:	ad 00       	.word	0x00ad	; ????
    100a:	26 01       	movw	r4, r12
    100c:	04 00       	.word	0x0004	; ????
    100e:	72 01       	movw	r14, r4
    1010:	04 00       	.word	0x0004	; ????
    1012:	b8 01       	movw	r22, r16
    1014:	04 00       	.word	0x0004	; ????
    1016:	b8 01       	movw	r22, r16
    1018:	08 00       	.word	0x0008	; ????
    101a:	70 03       	mulsu	r23, r16
    101c:	04 00       	.word	0x0004	; ????
    101e:	70 03       	mulsu	r23, r16
    1020:	04 00       	.word	0x0004	; ????
    1022:	00 00       	nop
    1024:	04 00       	.word	0x0004	; ????
    1026:	e4 02       	muls	r30, r20
    1028:	04 00       	.word	0x0004	; ????
    102a:	e4 02       	muls	r30, r20
    102c:	04 00       	.word	0x0004	; ????
    102e:	00 00       	nop
    1030:	04 00       	.word	0x0004	; ????
    1032:	26 01       	movw	r4, r12
    1034:	04 00       	.word	0x0004	; ????
    1036:	26 01       	movw	r4, r12
    1038:	04 00       	.word	0x0004	; ????
    103a:	72 01       	movw	r14, r4
    103c:	04 00       	.word	0x0004	; ????
    103e:	b8 01       	movw	r22, r16
    1040:	04 00       	.word	0x0004	; ????
    1042:	b8 01       	movw	r22, r16
    1044:	08 00       	.word	0x0008	; ????
    1046:	70 03       	mulsu	r23, r16
    1048:	04 00       	.word	0x0004	; ????
    104a:	70 03       	mulsu	r23, r16
    104c:	04 00       	.word	0x0004	; ????
    104e:	00 00       	nop
    1050:	04 00       	.word	0x0004	; ????
    1052:	10 03       	mulsu	r17, r16
    1054:	04 00       	.word	0x0004	; ????
    1056:	10 03       	mulsu	r17, r16
    1058:	04 00       	.word	0x0004	; ????
    105a:	00 00       	nop
    105c:	04 00       	.word	0x0004	; ????
    105e:	15 01       	movw	r2, r10
    1060:	04 00       	.word	0x0004	; ????
    1062:	15 01       	movw	r2, r10
    1064:	04 00       	.word	0x0004	; ????
    1066:	4a 01       	movw	r8, r20
    1068:	04 00       	.word	0x0004	; ????
    106a:	ee 01       	movw	r28, r28
    106c:	04 00       	.word	0x0004	; ????
    106e:	ee 01       	movw	r28, r28
    1070:	08 00       	.word	0x0008	; ????
    1072:	dc 03       	fmulsu	r21, r20
    1074:	04 00       	.word	0x0004	; ????
    1076:	dc 03       	fmulsu	r21, r20
    1078:	04 00       	.word	0x0004	; ????
    107a:	00 00       	nop
    107c:	04 00       	.word	0x0004	; ????
    107e:	10 03       	mulsu	r17, r16
    1080:	04 00       	.word	0x0004	; ????
    1082:	10 03       	mulsu	r17, r16
    1084:	04 00       	.word	0x0004	; ????
    1086:	00 00       	nop
    1088:	04 00       	.word	0x0004	; ????
    108a:	15 01       	movw	r2, r10
    108c:	04 00       	.word	0x0004	; ????
    108e:	15 01       	movw	r2, r10
    1090:	04 00       	.word	0x0004	; ????
    1092:	4a 01       	movw	r8, r20
    1094:	04 00       	.word	0x0004	; ????
    1096:	ee 01       	movw	r28, r28
    1098:	04 00       	.word	0x0004	; ????
    109a:	ee 01       	movw	r28, r28
    109c:	08 00       	.word	0x0008	; ????
    109e:	dc 03       	fmulsu	r21, r20
    10a0:	04 00       	.word	0x0004	; ????
    10a2:	dc 03       	fmulsu	r21, r20
    10a4:	04 00       	.word	0x0004	; ????
    10a6:	00 00       	nop
    10a8:	04 00       	.word	0x0004	; ????
    10aa:	e4 02       	muls	r30, r20
    10ac:	04 00       	.word	0x0004	; ????
    10ae:	e4 02       	muls	r30, r20
    10b0:	04 00       	.word	0x0004	; ????
    10b2:	00 00       	nop
    10b4:	04 00       	.word	0x0004	; ????
    10b6:	26 01       	movw	r4, r12
    10b8:	04 00       	.word	0x0004	; ????
    10ba:	26 01       	movw	r4, r12
    10bc:	04 00       	.word	0x0004	; ????
    10be:	72 01       	movw	r14, r4
    10c0:	04 00       	.word	0x0004	; ????
    10c2:	b8 01       	movw	r22, r16
    10c4:	04 00       	.word	0x0004	; ????
    10c6:	4b 02       	muls	r20, r27
    10c8:	08 00       	.word	0x0008	; ????
    10ca:	97 04       	cpc	r9, r7
    10cc:	04 00       	.word	0x0004	; ????
    10ce:	97 04       	cpc	r9, r7
    10d0:	04 00       	.word	0x0004	; ????
    10d2:	00 00       	nop
    10d4:	04 00       	.word	0x0004	; ????
    10d6:	70 03       	mulsu	r23, r16
    10d8:	04 00       	.word	0x0004	; ????
    10da:	70 03       	mulsu	r23, r16
    10dc:	04 00       	.word	0x0004	; ????
    10de:	00 00       	nop
    10e0:	04 00       	.word	0x0004	; ????
    10e2:	26 01       	movw	r4, r12
    10e4:	04 00       	.word	0x0004	; ????
    10e6:	26 01       	movw	r4, r12
    10e8:	04 00       	.word	0x0004	; ????
    10ea:	72 01       	movw	r14, r4
    10ec:	04 00       	.word	0x0004	; ????
    10ee:	b8 01       	movw	r22, r16
    10f0:	04 00       	.word	0x0004	; ????
    10f2:	4b 02       	muls	r20, r27
    10f4:	08 00       	.word	0x0008	; ????
    10f6:	97 04       	cpc	r9, r7
    10f8:	04 00       	.word	0x0004	; ????
    10fa:	97 04       	cpc	r9, r7
    10fc:	04 00       	.word	0x0004	; ????
    10fe:	00 00       	nop
    1100:	04 00       	.word	0x0004	; ????
    1102:	dc 03       	fmulsu	r21, r20
    1104:	04 00       	.word	0x0004	; ????
    1106:	dc 03       	fmulsu	r21, r20
    1108:	04 00       	.word	0x0004	; ????
    110a:	00 00       	nop
    110c:	04 00       	.word	0x0004	; ????
    110e:	4a 01       	movw	r8, r20
    1110:	04 00       	.word	0x0004	; ????
    1112:	4a 01       	movw	r8, r20
    1114:	04 00       	.word	0x0004	; ????
    1116:	88 01       	movw	r16, r16
    1118:	04 00       	.word	0x0004	; ????
    111a:	ee 01       	movw	r28, r28
    111c:	04 00       	.word	0x0004	; ????
    111e:	ee 01       	movw	r28, r28
    1120:	10 00       	.word	0x0010	; ????
    1122:	9f 01       	movw	r18, r30
    1124:	04 00       	.word	0x0004	; ????
    1126:	b8 01       	movw	r22, r16
    1128:	04 00       	.word	0x0004	; ????
    112a:	e4 02       	muls	r30, r20
    112c:	10 00       	.word	0x0010	; ????
    112e:	4b 02       	muls	r20, r27
    1130:	04 00       	.word	0x0004	; ????
    1132:	72 01       	movw	r14, r4
    1134:	04 00       	.word	0x0004	; ????
    1136:	72 01       	movw	r14, r4
    1138:	08 00       	.word	0x0008	; ????
    113a:	4a 01       	movw	r8, r20
    113c:	04 00       	.word	0x0004	; ????
    113e:	ee 01       	movw	r28, r28
    1140:	08 00       	.word	0x0008	; ????
    1142:	b8 01       	movw	r22, r16
    1144:	04 00       	.word	0x0004	; ????
    1146:	26 01       	movw	r4, r12
    1148:	04 00       	.word	0x0004	; ????
    114a:	00 00       	nop
    114c:	08 00       	.word	0x0008	; ????
    114e:	4b 02       	muls	r20, r27
    1150:	04 00       	.word	0x0004	; ????
    1152:	2a 02       	muls	r18, r26
    1154:	04 00       	.word	0x0004	; ????
    1156:	2a 02       	muls	r18, r26
    1158:	04 00       	.word	0x0004	; ????
    115a:	ee 01       	movw	r28, r28
    115c:	04 00       	.word	0x0004	; ????
    115e:	ee 01       	movw	r28, r28
    1160:	04 00       	.word	0x0004	; ????
    1162:	00 00       	nop
    1164:	04 00       	.word	0x0004	; ????
    1166:	ee 01       	movw	r28, r28
    1168:	04 00       	.word	0x0004	; ????
    116a:	d2 01       	movw	r26, r4
    116c:	04 00       	.word	0x0004	; ????
    116e:	d2 01       	movw	r26, r4
    1170:	04 00       	.word	0x0004	; ????
    1172:	ee 01       	movw	r28, r28
    1174:	04 00       	.word	0x0004	; ????
    1176:	ee 01       	movw	r28, r28
    1178:	04 00       	.word	0x0004	; ????
    117a:	00 00       	nop
    117c:	04 00       	.word	0x0004	; ????
    117e:	4a 01       	movw	r8, r20
    1180:	04 00       	.word	0x0004	; ????
    1182:	4a 01       	movw	r8, r20
    1184:	04 00       	.word	0x0004	; ????
    1186:	72 01       	movw	r14, r4
    1188:	08 00       	.word	0x0008	; ????
    118a:	4a 01       	movw	r8, r20
    118c:	04 00       	.word	0x0004	; ????
    118e:	00 00       	nop
    1190:	04 00       	.word	0x0004	; ????
    1192:	4a 01       	movw	r8, r20
    1194:	04 00       	.word	0x0004	; ????
    1196:	4a 01       	movw	r8, r20
    1198:	04 00       	.word	0x0004	; ????
    119a:	ee 01       	movw	r28, r28
    119c:	08 00       	.word	0x0008	; ????
    119e:	b8 01       	movw	r22, r16
    11a0:	04 00       	.word	0x0004	; ????
    11a2:	00 00       	nop
    11a4:	04 00       	.word	0x0004	; ????
    11a6:	4b 02       	muls	r20, r27
    11a8:	04 00       	.word	0x0004	; ????
    11aa:	2a 02       	muls	r18, r26
    11ac:	04 00       	.word	0x0004	; ????
    11ae:	2a 02       	muls	r18, r26
    11b0:	04 00       	.word	0x0004	; ????
    11b2:	ee 01       	movw	r28, r28
    11b4:	04 00       	.word	0x0004	; ????
    11b6:	ee 01       	movw	r28, r28
    11b8:	04 00       	.word	0x0004	; ????
    11ba:	00 00       	nop
    11bc:	04 00       	.word	0x0004	; ????
    11be:	ee 01       	movw	r28, r28
    11c0:	04 00       	.word	0x0004	; ????
    11c2:	2a 02       	muls	r18, r26
    11c4:	04 00       	.word	0x0004	; ????
    11c6:	93 02       	muls	r25, r19
    11c8:	04 00       	.word	0x0004	; ????
    11ca:	4b 02       	muls	r20, r27
    11cc:	04 00       	.word	0x0004	; ????
    11ce:	4b 02       	muls	r20, r27
    11d0:	04 00       	.word	0x0004	; ????
    11d2:	00 00       	nop
    11d4:	04 00       	.word	0x0004	; ????
    11d6:	9f 01       	movw	r18, r30
    11d8:	04 00       	.word	0x0004	; ????
    11da:	ee 01       	movw	r28, r28
    11dc:	04 00       	.word	0x0004	; ????
    11de:	ee 01       	movw	r28, r28
    11e0:	08 00       	.word	0x0008	; ????
    11e2:	b8 01       	movw	r22, r16
    11e4:	04 00       	.word	0x0004	; ????
    11e6:	9f 01       	movw	r18, r30
    11e8:	08 00       	.word	0x0008	; ????
    11ea:	72 01       	movw	r14, r4
    11ec:	04 00       	.word	0x0004	; ????
    11ee:	72 01       	movw	r14, r4
    11f0:	04 00       	.word	0x0004	; ????
    11f2:	00 00       	nop
    11f4:	04 00       	.word	0x0004	; ????
    11f6:	4a 01       	movw	r8, r20
    11f8:	04 00       	.word	0x0004	; ????
    11fa:	b8 01       	movw	r22, r16
    11fc:	04 00       	.word	0x0004	; ????
    11fe:	4b 02       	muls	r20, r27
    1200:	04 00       	.word	0x0004	; ????
    1202:	2a 02       	muls	r18, r26
    1204:	04 00       	.word	0x0004	; ????
    1206:	2a 02       	muls	r18, r26
    1208:	04 00       	.word	0x0004	; ????
    120a:	ee 01       	movw	r28, r28
    120c:	04 00       	.word	0x0004	; ????
    120e:	ee 01       	movw	r28, r28
    1210:	04 00       	.word	0x0004	; ????
    1212:	00 00       	nop
    1214:	04 00       	.word	0x0004	; ????
    1216:	ee 01       	movw	r28, r28
    1218:	04 00       	.word	0x0004	; ????
    121a:	d2 01       	movw	r26, r4
    121c:	04 00       	.word	0x0004	; ????
    121e:	d2 01       	movw	r26, r4
    1220:	04 00       	.word	0x0004	; ????
    1222:	ee 01       	movw	r28, r28
    1224:	04 00       	.word	0x0004	; ????
    1226:	ee 01       	movw	r28, r28
    1228:	04 00       	.word	0x0004	; ????
    122a:	00 00       	nop
    122c:	04 00       	.word	0x0004	; ????
    122e:	4a 01       	movw	r8, r20
    1230:	04 00       	.word	0x0004	; ????
    1232:	4a 01       	movw	r8, r20
    1234:	04 00       	.word	0x0004	; ????
    1236:	72 01       	movw	r14, r4
    1238:	08 00       	.word	0x0008	; ????
    123a:	4a 01       	movw	r8, r20
    123c:	04 00       	.word	0x0004	; ????
    123e:	00 00       	nop
    1240:	04 00       	.word	0x0004	; ????
    1242:	4a 01       	movw	r8, r20
    1244:	04 00       	.word	0x0004	; ????
    1246:	4a 01       	movw	r8, r20
    1248:	04 00       	.word	0x0004	; ????
    124a:	ee 01       	movw	r28, r28
    124c:	08 00       	.word	0x0008	; ????
    124e:	b8 01       	movw	r22, r16
    1250:	04 00       	.word	0x0004	; ????
    1252:	00 00       	nop
    1254:	04 00       	.word	0x0004	; ????
    1256:	4b 02       	muls	r20, r27
    1258:	04 00       	.word	0x0004	; ????
    125a:	2a 02       	muls	r18, r26
    125c:	04 00       	.word	0x0004	; ????
    125e:	2a 02       	muls	r18, r26
    1260:	04 00       	.word	0x0004	; ????
    1262:	ee 01       	movw	r28, r28
    1264:	04 00       	.word	0x0004	; ????
    1266:	ee 01       	movw	r28, r28
    1268:	04 00       	.word	0x0004	; ????
    126a:	00 00       	nop
    126c:	04 00       	.word	0x0004	; ????
    126e:	ee 01       	movw	r28, r28
    1270:	04 00       	.word	0x0004	; ????
    1272:	2a 02       	muls	r18, r26
    1274:	04 00       	.word	0x0004	; ????
    1276:	93 02       	muls	r25, r19
    1278:	04 00       	.word	0x0004	; ????
    127a:	4b 02       	muls	r20, r27
    127c:	04 00       	.word	0x0004	; ????
    127e:	4b 02       	muls	r20, r27
    1280:	04 00       	.word	0x0004	; ????
    1282:	00 00       	nop
    1284:	04 00       	.word	0x0004	; ????
    1286:	9f 01       	movw	r18, r30
    1288:	04 00       	.word	0x0004	; ????
    128a:	ee 01       	movw	r28, r28
    128c:	04 00       	.word	0x0004	; ????
    128e:	ee 01       	movw	r28, r28
    1290:	08 00       	.word	0x0008	; ????
    1292:	b8 01       	movw	r22, r16
    1294:	04 00       	.word	0x0004	; ????
    1296:	9f 01       	movw	r18, r30
    1298:	08 00       	.word	0x0008	; ????
    129a:	72 01       	movw	r14, r4
    129c:	04 00       	.word	0x0004	; ????
    129e:	72 01       	movw	r14, r4
    12a0:	04 00       	.word	0x0004	; ????
    12a2:	00 00       	nop
    12a4:	04 00       	.word	0x0004	; ????
    12a6:	4a 01       	movw	r8, r20
    12a8:	04 00       	.word	0x0004	; ????
    12aa:	b8 01       	movw	r22, r16
    12ac:	04 00       	.word	0x0004	; ????
    12ae:	00 00       	nop
    12b0:	04 00       	.word	0x0004	; ????
    12b2:	00 00       	nop
    12b4:	04 00       	.word	0x0004	; ????
    12b6:	00 00       	nop
    12b8:	04 00       	.word	0x0004	; ????
    12ba:	00 00       	nop
    12bc:	04 00       	.word	0x0004	; ????
	...

00001328 <__ctors_end>:
    1328:	11 24       	eor	r1, r1
    132a:	1f be       	out	0x3f, r1	; 63
    132c:	cf ef       	ldi	r28, 0xFF	; 255
    132e:	d8 e0       	ldi	r29, 0x08	; 8
    1330:	de bf       	out	0x3e, r29	; 62
    1332:	cd bf       	out	0x3d, r28	; 61

00001334 <__do_clear_bss>:
    1334:	21 e0       	ldi	r18, 0x01	; 1
    1336:	a0 e0       	ldi	r26, 0x00	; 0
    1338:	b1 e0       	ldi	r27, 0x01	; 1
    133a:	01 c0       	rjmp	.+2      	; 0x133e <.do_clear_bss_start>

0000133c <.do_clear_bss_loop>:
    133c:	1d 92       	st	X+, r1

0000133e <.do_clear_bss_start>:
    133e:	a5 30       	cpi	r26, 0x05	; 5
    1340:	b2 07       	cpc	r27, r18
    1342:	e1 f7       	brne	.-8      	; 0x133c <.do_clear_bss_loop>
    1344:	b9 d0       	rcall	.+370    	; 0x14b8 <main>
    1346:	62 c1       	rjmp	.+708    	; 0x160c <_exit>

00001348 <__bad_interrupt>:
    1348:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000134c <setDebuggingOutput>:
	/* we can not handle frequencies below 120Hz*/
	if (frequency < 120){
		frequency = 120;
	}
	return(F_CPU / 2 / frequency);
}
    134c:	25 9a       	sbi	0x04, 5	; 4
    134e:	08 95       	ret

00001350 <setDebuggingLed>:
    1350:	2d 9a       	sbi	0x05, 5	; 5
    1352:	08 95       	ret

00001354 <clearDebuggingLed>:
    1354:	2d 98       	cbi	0x05, 5	; 5
    1356:	08 95       	ret

00001358 <calcOCVal>:



uint16_t calcTOP(uint16_t frequency){
	/* we can not handle frequencies below 120Hz*/
	if (frequency < 120){
    1358:	88 37       	cpi	r24, 0x78	; 120
    135a:	91 05       	cpc	r25, r1
    135c:	10 f4       	brcc	.+4      	; 0x1362 <calcOCVal+0xa>
		frequency = 120;
    135e:	88 e7       	ldi	r24, 0x78	; 120
    1360:	90 e0       	ldi	r25, 0x00	; 0
	}
	return(F_CPU / 2 / frequency);
}

uint16_t calcOCVal(uint16_t frequency){
	return( calcTOP(frequency)/100*PWMDUTYCYCLE );
    1362:	9c 01       	movw	r18, r24
    1364:	40 e0       	ldi	r20, 0x00	; 0
    1366:	50 e0       	ldi	r21, 0x00	; 0
    1368:	60 e0       	ldi	r22, 0x00	; 0
    136a:	72 e1       	ldi	r23, 0x12	; 18
    136c:	8a e7       	ldi	r24, 0x7A	; 122
    136e:	90 e0       	ldi	r25, 0x00	; 0
    1370:	1c d1       	rcall	.+568    	; 0x15aa <__udivmodsi4>
    1372:	36 95       	lsr	r19
    1374:	27 95       	ror	r18
    1376:	36 95       	lsr	r19
    1378:	27 95       	ror	r18
    137a:	ab e7       	ldi	r26, 0x7B	; 123
    137c:	b4 e1       	ldi	r27, 0x14	; 20
    137e:	37 d1       	rcall	.+622    	; 0x15ee <__umulhisi3>
    1380:	96 95       	lsr	r25
    1382:	87 95       	ror	r24
    1384:	9c 01       	movw	r18, r24
    1386:	22 0f       	add	r18, r18
    1388:	33 1f       	adc	r19, r19
    138a:	22 0f       	add	r18, r18
    138c:	33 1f       	adc	r19, r19
}
    138e:	82 0f       	add	r24, r18
    1390:	93 1f       	adc	r25, r19
    1392:	08 95       	ret

00001394 <setPWM>:

void setPWM(uint16_t frequency){
    1394:	cf 93       	push	r28
    1396:	df 93       	push	r29
	
	/* we can not handle frequencies below 120Hz*/
	if (frequency < 120){
    1398:	88 37       	cpi	r24, 0x78	; 120
    139a:	91 05       	cpc	r25, r1
    139c:	30 f4       	brcc	.+12     	; 0x13aa <setPWM+0x16>
		
		//disable pwm output
		TCCR1A &= ~( 1<<COM1A1 | 1<<COM1A0);
    139e:	e0 e8       	ldi	r30, 0x80	; 128
    13a0:	f0 e0       	ldi	r31, 0x00	; 0
    13a2:	80 81       	ld	r24, Z
    13a4:	8f 73       	andi	r24, 0x3F	; 63
    13a6:	80 83       	st	Z, r24
    13a8:	17 c0       	rjmp	.+46     	; 0x13d8 <setPWM+0x44>
    13aa:	ec 01       	movw	r28, r24
		
	} else {
		
		OCR1A = calcOCVal(frequency);
    13ac:	d5 df       	rcall	.-86     	; 0x1358 <calcOCVal>
    13ae:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
    13b2:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
uint16_t calcTOP(uint16_t frequency){
	/* we can not handle frequencies below 120Hz*/
	if (frequency < 120){
		frequency = 120;
	}
	return(F_CPU / 2 / frequency);
    13b6:	9e 01       	movw	r18, r28
    13b8:	40 e0       	ldi	r20, 0x00	; 0
    13ba:	50 e0       	ldi	r21, 0x00	; 0
    13bc:	60 e0       	ldi	r22, 0x00	; 0
    13be:	72 e1       	ldi	r23, 0x12	; 18
    13c0:	8a e7       	ldi	r24, 0x7A	; 122
    13c2:	90 e0       	ldi	r25, 0x00	; 0
    13c4:	f2 d0       	rcall	.+484    	; 0x15aa <__udivmodsi4>
		TCCR1A &= ~( 1<<COM1A1 | 1<<COM1A0);
		
	} else {
		
		OCR1A = calcOCVal(frequency);
		ICR1 = calcTOP(frequency);
    13c6:	30 93 87 00 	sts	0x0087, r19	; 0x800087 <__TEXT_REGION_LENGTH__+0x7e0087>
    13ca:	20 93 86 00 	sts	0x0086, r18	; 0x800086 <__TEXT_REGION_LENGTH__+0x7e0086>
		
		TCCR1A |=  1<<COM1A1 ;
    13ce:	e0 e8       	ldi	r30, 0x80	; 128
    13d0:	f0 e0       	ldi	r31, 0x00	; 0
    13d2:	80 81       	ld	r24, Z
    13d4:	80 68       	ori	r24, 0x80	; 128
    13d6:	80 83       	st	Z, r24
		
	}
}
    13d8:	df 91       	pop	r29
    13da:	cf 91       	pop	r28
    13dc:	08 95       	ret

000013de <initTimer0>:
}


void initTimer0(void){
	/* set up time progressing timer (1ms interrupt frequency) */
	TCCR0A  = 0x02; //CTC Mode
    13de:	82 e0       	ldi	r24, 0x02	; 2
    13e0:	84 bd       	out	0x24, r24	; 36
	OCR0A   = F_CPU/64/1000-1; //top for CTC mode
    13e2:	89 ef       	ldi	r24, 0xF9	; 249
    13e4:	87 bd       	out	0x27, r24	; 39
	TIMSK0 |= (1<<OCIE0A);
    13e6:	ee e6       	ldi	r30, 0x6E	; 110
    13e8:	f0 e0       	ldi	r31, 0x00	; 0
    13ea:	80 81       	ld	r24, Z
    13ec:	82 60       	ori	r24, 0x02	; 2
    13ee:	80 83       	st	Z, r24
	TCCR0B  = 0x03; //run with PS=64
    13f0:	83 e0       	ldi	r24, 0x03	; 3
    13f2:	85 bd       	out	0x25, r24	; 37
    13f4:	08 95       	ret

000013f6 <initTimer1>:
}

void initTimer1(void){
    13f6:	cf 93       	push	r28
    13f8:	df 93       	push	r29
	/* set up pwm pin */
	DDRB |= (1<<PB1);
    13fa:	21 9a       	sbi	0x04, 1	; 4
	/* set up the hardware pwm timer */
	TCCR1A=0x80;
    13fc:	80 e8       	ldi	r24, 0x80	; 128
    13fe:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
	TCCR1B=0x10;
    1402:	c1 e8       	ldi	r28, 0x81	; 129
    1404:	d0 e0       	ldi	r29, 0x00	; 0
    1406:	80 e1       	ldi	r24, 0x10	; 16
    1408:	88 83       	st	Y, r24
	/*turn off pwm*/
	setPWM(0);
    140a:	80 e0       	ldi	r24, 0x00	; 0
    140c:	90 e0       	ldi	r25, 0x00	; 0
    140e:	c2 df       	rcall	.-124    	; 0x1394 <setPWM>
	/* start the timer. no ps */
	TCCR1B=0x11;
    1410:	81 e1       	ldi	r24, 0x11	; 17
    1412:	88 83       	st	Y, r24
}
    1414:	df 91       	pop	r29
    1416:	cf 91       	pop	r28
    1418:	08 95       	ret

0000141a <initButton>:


void initButton(void){
	/* set PortD3 as input with Pullup */
	PORTD |= (1<<PD3);
    141a:	5b 9a       	sbi	0x0b, 3	; 11
	DDRD &= ~(1<<PD3);
    141c:	53 98       	cbi	0x0a, 3	; 10
    141e:	08 95       	ret

00001420 <initDebugging>:
}

void initDebugging(void){
	clearDebuggingLed();
    1420:	99 df       	rcall	.-206    	; 0x1354 <clearDebuggingLed>
	setDebuggingOutput();
    1422:	94 cf       	rjmp	.-216    	; 0x134c <setDebuggingOutput>
    1424:	08 95       	ret

00001426 <__vector_14>:
    1426:	1f 92       	push	r1

uint16_t isrcount=0;

/* Blocking timer interrupt progressing the time */
/* is called every millisecond */
ISR(TIMER0_COMPA_vect, ISR_BLOCK){
    1428:	0f 92       	push	r0
    142a:	0f b6       	in	r0, 0x3f	; 63
    142c:	0f 92       	push	r0
    142e:	11 24       	eor	r1, r1
    1430:	2f 93       	push	r18
    1432:	3f 93       	push	r19
    1434:	4f 93       	push	r20
    1436:	5f 93       	push	r21
    1438:	6f 93       	push	r22
    143a:	7f 93       	push	r23
    143c:	8f 93       	push	r24
    143e:	9f 93       	push	r25
    1440:	af 93       	push	r26
    1442:	bf 93       	push	r27
    1444:	ef 93       	push	r30
    1446:	ff 93       	push	r31
	/* check if we have something to do */
	if(remainingDuration > 0){
    1448:	80 91 03 01 	lds	r24, 0x0103	; 0x800103 <remainingDuration>
    144c:	90 91 04 01 	lds	r25, 0x0104	; 0x800104 <remainingDuration+0x1>
    1450:	89 2b       	or	r24, r25
    1452:	b1 f0       	breq	.+44     	; 0x1480 <__vector_14+0x5a>
		/* handle internote gap if needed */
		if(remainingDuration == currentInterNoteGap){
    1454:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <currentInterNoteGap>
    1458:	20 91 03 01 	lds	r18, 0x0103	; 0x800103 <remainingDuration>
    145c:	30 91 04 01 	lds	r19, 0x0104	; 0x800104 <remainingDuration+0x1>
    1460:	90 e0       	ldi	r25, 0x00	; 0
    1462:	82 17       	cp	r24, r18
    1464:	93 07       	cpc	r25, r19
    1466:	19 f4       	brne	.+6      	; 0x146e <__vector_14+0x48>
			/* keep silent during gap*/
			setPWM( 0 );
    1468:	80 e0       	ldi	r24, 0x00	; 0
    146a:	90 e0       	ldi	r25, 0x00	; 0
    146c:	93 df       	rcall	.-218    	; 0x1394 <setPWM>
		}
		/* progress time */
		--remainingDuration;
    146e:	80 91 03 01 	lds	r24, 0x0103	; 0x800103 <remainingDuration>
    1472:	90 91 04 01 	lds	r25, 0x0104	; 0x800104 <remainingDuration+0x1>
    1476:	01 97       	sbiw	r24, 0x01	; 1
    1478:	90 93 04 01 	sts	0x0104, r25	; 0x800104 <remainingDuration+0x1>
    147c:	80 93 03 01 	sts	0x0103, r24	; 0x800103 <remainingDuration>
	}
}
    1480:	ff 91       	pop	r31
    1482:	ef 91       	pop	r30
    1484:	bf 91       	pop	r27
    1486:	af 91       	pop	r26
    1488:	9f 91       	pop	r25
    148a:	8f 91       	pop	r24
    148c:	7f 91       	pop	r23
    148e:	6f 91       	pop	r22
    1490:	5f 91       	pop	r21
    1492:	4f 91       	pop	r20
    1494:	3f 91       	pop	r19
    1496:	2f 91       	pop	r18
    1498:	0f 90       	pop	r0
    149a:	0f be       	out	0x3f, r0	; 63
    149c:	0f 90       	pop	r0
    149e:	1f 90       	pop	r1
    14a0:	18 95       	reti

000014a2 <playToneBackend>:

/* starts playback of a tone with given frequency, duration, and following inter-note-gap  */
void playToneBackend(uint16_t duration_ms, uint16_t frequency_hz, uint8_t internotegap_ms){
	/* set up tone */
	remainingDuration = duration_ms + internotegap_ms;
    14a2:	84 0f       	add	r24, r20
    14a4:	91 1d       	adc	r25, r1
    14a6:	90 93 04 01 	sts	0x0104, r25	; 0x800104 <remainingDuration+0x1>
    14aa:	80 93 03 01 	sts	0x0103, r24	; 0x800103 <remainingDuration>
	currentInterNoteGap = internotegap_ms;
    14ae:	40 93 02 01 	sts	0x0102, r20	; 0x800102 <currentInterNoteGap>
	setPWM( frequency_hz );
    14b2:	cb 01       	movw	r24, r22
    14b4:	6f cf       	rjmp	.-290    	; 0x1394 <setPWM>
    14b6:	08 95       	ret

000014b8 <main>:
	uint8_t state=STOP;
	uint8_t i=0;
	uint16_t debounce=0;
	
	/* do initializations */
	initButton();
    14b8:	b0 df       	rcall	.-160    	; 0x141a <initButton>
	initTimer0();
    14ba:	91 df       	rcall	.-222    	; 0x13de <initTimer0>
	initTimer1();
    14bc:	9c df       	rcall	.-200    	; 0x13f6 <initTimer1>
    14be:	b0 df       	rcall	.-160    	; 0x1420 <initDebugging>
	
	#if DEBUGGING == TRUE
	initDebugging();
    14c0:	78 94       	sei
    14c2:	83 b7       	in	r24, 0x33	; 51
	#endif
	
	/*  enable interrupts */
	sei();
    14c4:	81 7f       	andi	r24, 0xF1	; 241
	
	set_sleep_mode(SLEEP_MODE_IDLE);
    14c6:	83 bf       	out	0x33, r24	; 51
    14c8:	83 b7       	in	r24, 0x33	; 51
    14ca:	81 60       	ori	r24, 0x01	; 1
	sleep_enable();
    14cc:	83 bf       	out	0x33, r24	; 51
    14ce:	c0 e0       	ldi	r28, 0x00	; 0
    14d0:	d0 e0       	ldi	r29, 0x00	; 0
	uint16_t currentFrequency = 0;
	uint16_t currentDuration = 0;
	
	uint8_t state=STOP;
	uint8_t i=0;
	uint16_t debounce=0;
    14d2:	10 e0       	ldi	r17, 0x00	; 0
    14d4:	00 e0       	ldi	r16, 0x00	; 0
int main(void){

	uint16_t currentFrequency = 0;
	uint16_t currentDuration = 0;
	
	uint8_t state=STOP;
    14d6:	ff 24       	eor	r15, r15
			debounce = 0;
		}
		if (state == STOP){
			if (debounce == DEBOUNCELIMIT){
				state = PLAY;
				debounce = 0;
    14d8:	f3 94       	inc	r15
    14da:	0f 2e       	mov	r0, r31
    14dc:	fe e4       	ldi	r31, 0x4E	; 78
				} else {
					/* fetch music date */
					currentFrequency = pgm_read_word(&music[i][2*musicPosition+1]);
					currentDuration =  pgm_read_word(&music[i][2*musicPosition+2]);
					/* play tone */
					playToneBackend(note2duration(currentDuration), currentFrequency, INTERNOTEGAP);
    14de:	ef 2e       	mov	r14, r31
    14e0:	f0 2d       	mov	r31, r0
    14e2:	4b 99       	sbic	0x09, 3	; 9
    14e4:	5d c0       	rjmp	.+186    	; 0x15a0 <main+0xe8>
	sleep_enable();

	/* main work loop */
	while(TRUE){
		/* check if state change is needed (pressed button)*/		
		if ((PIND & (1<<PD3)) == 0){
    14e6:	21 96       	adiw	r28, 0x01	; 1
    14e8:	11 11       	cpse	r17, r1
			debounce++;
    14ea:	0c c0       	rjmp	.+24     	; 0x1504 <main+0x4c>
		} else {
			debounce = 0;
		}
		if (state == STOP){
    14ec:	c4 3f       	cpi	r28, 0xF4	; 244
    14ee:	21 e0       	ldi	r18, 0x01	; 1
			if (debounce == DEBOUNCELIMIT){
    14f0:	d2 07       	cpc	r29, r18
    14f2:	09 f0       	breq	.+2      	; 0x14f6 <main+0x3e>
    14f4:	53 c0       	rjmp	.+166    	; 0x159c <main+0xe4>
    14f6:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <_edata+0x1>
				state = PLAY;
				debounce = 0;
				musicPosition = 0;
    14fa:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <_edata>
    14fe:	c0 e0       	ldi	r28, 0x00	; 0
    1500:	d0 e0       	ldi	r29, 0x00	; 0
			debounce = 0;
		}
		if (state == STOP){
			if (debounce == DEBOUNCELIMIT){
				state = PLAY;
				debounce = 0;
    1502:	08 c0       	rjmp	.+16     	; 0x1514 <main+0x5c>
    1504:	c8 3e       	cpi	r28, 0xE8	; 232
    1506:	33 e0       	ldi	r19, 0x03	; 3
				musicPosition = 0;
			}
		} else {
			if (debounce >= 2*DEBOUNCELIMIT) {
    1508:	d3 07       	cpc	r29, r19
    150a:	08 f0       	brcs	.+2      	; 0x150e <main+0x56>
    150c:	42 c0       	rjmp	.+132    	; 0x1592 <main+0xda>
    150e:	11 30       	cpi	r17, 0x01	; 1
				state = STOP;
				debounce = 0;
			}
		}
		
		if (state == PLAY){
    1510:	09 f0       	breq	.+2      	; 0x1514 <main+0x5c>
    1512:	37 c0       	rjmp	.+110    	; 0x1582 <main+0xca>
    1514:	1d df       	rcall	.-454    	; 0x1350 <setDebuggingLed>
			setDebuggingLed();
    1516:	80 91 03 01 	lds	r24, 0x0103	; 0x800103 <remainingDuration>
			/* if next note should be played */
			if(remainingDuration == 0){
    151a:	90 91 04 01 	lds	r25, 0x0104	; 0x800104 <remainingDuration+0x1>
    151e:	89 2b       	or	r24, r25
    1520:	09 f0       	breq	.+2      	; 0x1524 <main+0x6c>
    1522:	34 c0       	rjmp	.+104    	; 0x158c <main+0xd4>
    1524:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
				/* if there are more notes to play */
				if(musicPosition >= music[i][0]){
    1528:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <_edata+0x1>
    152c:	84 33       	cpi	r24, 0x34	; 52
    152e:	91 05       	cpc	r25, r1
    1530:	28 f0       	brcs	.+10     	; 0x153c <main+0x84>
    1532:	80 e0       	ldi	r24, 0x00	; 0
					/* we have finished the track - stop */
					state = STOP;
					setPWM(0);
    1534:	90 e0       	ldi	r25, 0x00	; 0
    1536:	2e df       	rcall	.-420    	; 0x1394 <setPWM>
    1538:	10 2f       	mov	r17, r16
    153a:	29 c0       	rjmp	.+82     	; 0x158e <main+0xd6>
			/* if next note should be played */
			if(remainingDuration == 0){
				/* if there are more notes to play */
				if(musicPosition >= music[i][0]){
					/* we have finished the track - stop */
					state = STOP;
    153c:	88 0f       	add	r24, r24
    153e:	99 1f       	adc	r25, r25
					setPWM(0);
				} else {
					/* fetch music date */
					currentFrequency = pgm_read_word(&music[i][2*musicPosition+1]);
    1540:	fc 01       	movw	r30, r24
    1542:	ee 0f       	add	r30, r30
    1544:	ff 1f       	adc	r31, r31
    1546:	e6 59       	subi	r30, 0x96	; 150
    1548:	ff 4f       	sbci	r31, 0xFF	; 255
    154a:	65 91       	lpm	r22, Z+
    154c:	74 91       	lpm	r23, Z
    154e:	fc 01       	movw	r30, r24
    1550:	ee 0f       	add	r30, r30
					currentDuration =  pgm_read_word(&music[i][2*musicPosition+2]);
    1552:	ff 1f       	adc	r31, r31
    1554:	e4 59       	subi	r30, 0x94	; 148
    1556:	ff 4f       	sbci	r31, 0xFF	; 255
    1558:	85 91       	lpm	r24, Z+
    155a:	94 91       	lpm	r25, Z
    155c:	4e e1       	ldi	r20, 0x1E	; 30
    155e:	9c 01       	movw	r18, r24
					/* play tone */
					playToneBackend(note2duration(currentDuration), currentFrequency, INTERNOTEGAP);
    1560:	e2 9e       	mul	r14, r18
    1562:	c0 01       	movw	r24, r0
    1564:	e3 9e       	mul	r14, r19
    1566:	90 0d       	add	r25, r0
    1568:	11 24       	eor	r1, r1
    156a:	9b df       	rcall	.-202    	; 0x14a2 <playToneBackend>
    156c:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
					musicPosition++;
    1570:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <_edata+0x1>
    1574:	01 96       	adiw	r24, 0x01	; 1
    1576:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <_edata+0x1>
    157a:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <_edata>
    157e:	1f 2d       	mov	r17, r15
    1580:	06 c0       	rjmp	.+12     	; 0x158e <main+0xd6>
				}
			}
		}else{
			clearDebuggingLed();
    1582:	e8 de       	rcall	.-560    	; 0x1354 <clearDebuggingLed>
    1584:	80 e0       	ldi	r24, 0x00	; 0
			setPWM(0);
    1586:	90 e0       	ldi	r25, 0x00	; 0
    1588:	05 df       	rcall	.-502    	; 0x1394 <setPWM>
    158a:	01 c0       	rjmp	.+2      	; 0x158e <main+0xd6>
    158c:	1f 2d       	mov	r17, r15
    158e:	88 95       	sleep
    1590:	a8 cf       	rjmp	.-176    	; 0x14e2 <main+0x2a>
		}
		/* Set CPU to sleep mode. */
		sleep_cpu();
    1592:	c0 e0       	ldi	r28, 0x00	; 0
	}
    1594:	d0 e0       	ldi	r29, 0x00	; 0
				musicPosition = 0;
			}
		} else {
			if (debounce >= 2*DEBOUNCELIMIT) {
				state = STOP;
				debounce = 0;
    1596:	02 c0       	rjmp	.+4      	; 0x159c <main+0xe4>
    1598:	c0 e0       	ldi	r28, 0x00	; 0
    159a:	d0 e0       	ldi	r29, 0x00	; 0
	while(TRUE){
		/* check if state change is needed (pressed button)*/		
		if ((PIND & (1<<PD3)) == 0){
			debounce++;
		} else {
			debounce = 0;
    159c:	10 2f       	mov	r17, r16
    159e:	f1 cf       	rjmp	.-30     	; 0x1582 <main+0xca>
		}
		if (state == STOP){
			if (debounce == DEBOUNCELIMIT){
				state = PLAY;
				debounce = 0;
    15a0:	11 23       	and	r17, r17
    15a2:	d1 f3       	breq	.-12     	; 0x1598 <main+0xe0>
		if ((PIND & (1<<PD3)) == 0){
			debounce++;
		} else {
			debounce = 0;
		}
		if (state == STOP){
    15a4:	c0 e0       	ldi	r28, 0x00	; 0
    15a6:	d0 e0       	ldi	r29, 0x00	; 0
	while(TRUE){
		/* check if state change is needed (pressed button)*/		
		if ((PIND & (1<<PD3)) == 0){
			debounce++;
		} else {
			debounce = 0;
    15a8:	ad cf       	rjmp	.-166    	; 0x1504 <main+0x4c>

000015aa <__udivmodsi4>:
    15aa:	a1 e2       	ldi	r26, 0x21	; 33
    15ac:	1a 2e       	mov	r1, r26
    15ae:	aa 1b       	sub	r26, r26
    15b0:	bb 1b       	sub	r27, r27
    15b2:	fd 01       	movw	r30, r26
    15b4:	0d c0       	rjmp	.+26     	; 0x15d0 <__udivmodsi4_ep>

000015b6 <__udivmodsi4_loop>:
    15b6:	aa 1f       	adc	r26, r26
    15b8:	bb 1f       	adc	r27, r27
    15ba:	ee 1f       	adc	r30, r30
    15bc:	ff 1f       	adc	r31, r31
    15be:	a2 17       	cp	r26, r18
    15c0:	b3 07       	cpc	r27, r19
    15c2:	e4 07       	cpc	r30, r20
    15c4:	f5 07       	cpc	r31, r21
    15c6:	20 f0       	brcs	.+8      	; 0x15d0 <__udivmodsi4_ep>
    15c8:	a2 1b       	sub	r26, r18
    15ca:	b3 0b       	sbc	r27, r19
    15cc:	e4 0b       	sbc	r30, r20
    15ce:	f5 0b       	sbc	r31, r21

000015d0 <__udivmodsi4_ep>:
    15d0:	66 1f       	adc	r22, r22
    15d2:	77 1f       	adc	r23, r23
    15d4:	88 1f       	adc	r24, r24
    15d6:	99 1f       	adc	r25, r25
    15d8:	1a 94       	dec	r1
    15da:	69 f7       	brne	.-38     	; 0x15b6 <__udivmodsi4_loop>
    15dc:	60 95       	com	r22
    15de:	70 95       	com	r23
    15e0:	80 95       	com	r24
    15e2:	90 95       	com	r25
    15e4:	9b 01       	movw	r18, r22
    15e6:	ac 01       	movw	r20, r24
    15e8:	bd 01       	movw	r22, r26
    15ea:	cf 01       	movw	r24, r30
    15ec:	08 95       	ret

000015ee <__umulhisi3>:
    15ee:	a2 9f       	mul	r26, r18
    15f0:	b0 01       	movw	r22, r0
    15f2:	b3 9f       	mul	r27, r19
    15f4:	c0 01       	movw	r24, r0
    15f6:	a3 9f       	mul	r26, r19
    15f8:	70 0d       	add	r23, r0
    15fa:	81 1d       	adc	r24, r1
    15fc:	11 24       	eor	r1, r1
    15fe:	91 1d       	adc	r25, r1
    1600:	b2 9f       	mul	r27, r18
    1602:	70 0d       	add	r23, r0
    1604:	81 1d       	adc	r24, r1
    1606:	11 24       	eor	r1, r1
    1608:	91 1d       	adc	r25, r1
    160a:	08 95       	ret

0000160c <_exit>:
    160c:	f8 94       	cli

0000160e <__stop_program>:
    160e:	ff cf       	rjmp	.-2      	; 0x160e <__stop_program>
