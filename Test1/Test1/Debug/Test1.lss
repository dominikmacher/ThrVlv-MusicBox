
Test1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00001822  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000017ae  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000005  00800100  00800100  00001822  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00001822  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001854  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000090  00000000  00000000  00001894  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000cd9  00000000  00000000  00001924  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000776  00000000  00000000  000025fd  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000590  00000000  00000000  00002d73  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000164  00000000  00000000  00003304  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004e4  00000000  00000000  00003468  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000007ec  00000000  00000000  0000394c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000080  00000000  00000000  00004138  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 94 09 	jmp	0x1328	; 0x1328 <__ctors_end>
       4:	0c 94 a4 09 	jmp	0x1348	; 0x1348 <__bad_interrupt>
       8:	0c 94 a4 09 	jmp	0x1348	; 0x1348 <__bad_interrupt>
       c:	0c 94 a4 09 	jmp	0x1348	; 0x1348 <__bad_interrupt>
      10:	0c 94 a4 09 	jmp	0x1348	; 0x1348 <__bad_interrupt>
      14:	0c 94 a4 09 	jmp	0x1348	; 0x1348 <__bad_interrupt>
      18:	0c 94 a4 09 	jmp	0x1348	; 0x1348 <__bad_interrupt>
      1c:	0c 94 a4 09 	jmp	0x1348	; 0x1348 <__bad_interrupt>
      20:	0c 94 a4 09 	jmp	0x1348	; 0x1348 <__bad_interrupt>
      24:	0c 94 a4 09 	jmp	0x1348	; 0x1348 <__bad_interrupt>
      28:	0c 94 a4 09 	jmp	0x1348	; 0x1348 <__bad_interrupt>
      2c:	0c 94 a4 09 	jmp	0x1348	; 0x1348 <__bad_interrupt>
      30:	0c 94 a4 09 	jmp	0x1348	; 0x1348 <__bad_interrupt>
      34:	0c 94 a4 09 	jmp	0x1348	; 0x1348 <__bad_interrupt>
      38:	0c 94 15 0a 	jmp	0x142a	; 0x142a <__vector_14>
      3c:	0c 94 a4 09 	jmp	0x1348	; 0x1348 <__bad_interrupt>
      40:	0c 94 a4 09 	jmp	0x1348	; 0x1348 <__bad_interrupt>
      44:	0c 94 a4 09 	jmp	0x1348	; 0x1348 <__bad_interrupt>
      48:	0c 94 a4 09 	jmp	0x1348	; 0x1348 <__bad_interrupt>
      4c:	0c 94 a4 09 	jmp	0x1348	; 0x1348 <__bad_interrupt>
      50:	0c 94 a4 09 	jmp	0x1348	; 0x1348 <__bad_interrupt>
      54:	0c 94 a4 09 	jmp	0x1348	; 0x1348 <__bad_interrupt>
      58:	0c 94 a4 09 	jmp	0x1348	; 0x1348 <__bad_interrupt>
      5c:	0c 94 a4 09 	jmp	0x1348	; 0x1348 <__bad_interrupt>
      60:	0c 94 a4 09 	jmp	0x1348	; 0x1348 <__bad_interrupt>
      64:	0c 94 a4 09 	jmp	0x1348	; 0x1348 <__bad_interrupt>

00000068 <__trampolines_end>:
      68:	34 00       	.word	0x0034	; ????
      6a:	00 00       	nop
      6c:	04 00       	.word	0x0004	; ????
      6e:	00 00       	nop
      70:	04 00       	.word	0x0004	; ????
      72:	bb 02       	muls	r27, r27
      74:	06 00       	.word	0x0006	; ????
      76:	0b 02       	muls	r16, r27
      78:	03 00       	.word	0x0003	; ????
      7a:	bb 02       	muls	r27, r27
      7c:	0f 00       	.word	0x000f	; ????
      7e:	d2 01       	movw	r26, r4
      80:	03 00       	.word	0x0003	; ????
      82:	0b 02       	muls	r16, r27
      84:	06 00       	.word	0x0006	; ????
      86:	5d 01       	movw	r10, r26
      88:	0c 00       	.word	0x000c	; ????
      8a:	b8 01       	movw	r22, r16
      8c:	01 00       	.word	0x0001	; ????
      8e:	0b 02       	muls	r16, r27
      90:	01 00       	.word	0x0001	; ????
      92:	bb 02       	muls	r27, r27
      94:	03 00       	.word	0x0003	; ????
      96:	0b 02       	muls	r16, r27
      98:	03 00       	.word	0x0003	; ????
      9a:	10 03       	mulsu	r17, r16
      9c:	03 00       	.word	0x0003	; ????
      9e:	bb 02       	muls	r27, r27
      a0:	0f 00       	.word	0x000f	; ????
      a2:	6e 02       	muls	r22, r30
      a4:	04 00       	.word	0x0004	; ????
      a6:	4b 02       	muls	r20, r27
      a8:	01 00       	.word	0x0001	; ????
      aa:	0b 02       	muls	r16, r27
      ac:	01 00       	.word	0x0001	; ????
      ae:	d2 01       	movw	r26, r4
      b0:	04 00       	.word	0x0004	; ????
      b2:	0b 02       	muls	r16, r27
      b4:	0c 00       	.word	0x000c	; ????
      b6:	bb 02       	muls	r27, r27
      b8:	04 00       	.word	0x0004	; ????
      ba:	bb 02       	muls	r27, r27
      bc:	01 00       	.word	0x0001	; ????
      be:	0b 02       	muls	r16, r27
      c0:	03 00       	.word	0x0003	; ????
      c2:	bb 02       	muls	r27, r27
      c4:	0f 00       	.word	0x000f	; ????
      c6:	b8 01       	movw	r22, r16
      c8:	03 00       	.word	0x0003	; ????
      ca:	d2 01       	movw	r26, r4
      cc:	06 00       	.word	0x0006	; ????
      ce:	0b 02       	muls	r16, r27
      d0:	03 00       	.word	0x0003	; ????
      d2:	5d 01       	movw	r10, r26
      d4:	0c 00       	.word	0x000c	; ????
      d6:	9f 01       	movw	r18, r30
      d8:	04 00       	.word	0x0004	; ????
      da:	d2 01       	movw	r26, r4
      dc:	01 00       	.word	0x0001	; ????
      de:	2a 02       	muls	r18, r26
      e0:	03 00       	.word	0x0003	; ????
      e2:	6e 02       	muls	r22, r30
      e4:	12 00       	.word	0x0012	; ????
      e6:	00 00       	nop
      e8:	04 00       	.word	0x0004	; ????
      ea:	6e 02       	muls	r22, r30
      ec:	03 00       	.word	0x0003	; ????
      ee:	4b 02       	muls	r20, r27
      f0:	06 00       	.word	0x0006	; ????
      f2:	d2 01       	movw	r26, r4
      f4:	03 00       	.word	0x0003	; ????
      f6:	6e 02       	muls	r22, r30
      f8:	06 00       	.word	0x0006	; ????
      fa:	4b 02       	muls	r20, r27
      fc:	06 00       	.word	0x0006	; ????
      fe:	b8 01       	movw	r22, r16
     100:	04 00       	.word	0x0004	; ????
     102:	d2 01       	movw	r26, r4
     104:	01 00       	.word	0x0001	; ????
     106:	0b 02       	muls	r16, r27
     108:	03 00       	.word	0x0003	; ????
     10a:	bb 02       	muls	r27, r27
     10c:	0f 00       	.word	0x000f	; ????
     10e:	0b 02       	muls	r16, r27
     110:	03 00       	.word	0x0003	; ????
     112:	d2 01       	movw	r26, r4
     114:	06 00       	.word	0x0006	; ????
     116:	5d 01       	movw	r10, r26
     118:	03 00       	.word	0x0003	; ????
     11a:	0b 02       	muls	r16, r27
     11c:	06 00       	.word	0x0006	; ????
     11e:	d2 01       	movw	r26, r4
     120:	06 00       	.word	0x0006	; ????
     122:	d2 01       	movw	r26, r4
     124:	03 00       	.word	0x0003	; ????
     126:	b8 01       	movw	r22, r16
     128:	03 00       	.word	0x0003	; ????
     12a:	5d 01       	movw	r10, r26
     12c:	03 00       	.word	0x0003	; ????
     12e:	49 01       	movw	r8, r18
     130:	03 00       	.word	0x0003	; ????
     132:	5d 01       	movw	r10, r26
     134:	0c 00       	.word	0x000c	; ????
     136:	00 00       	nop
     138:	04 00       	.word	0x0004	; ????
	...
     386:	00 00       	nop
     388:	49 00       	.word	0x0049	; ????
     38a:	00 00       	nop
     38c:	04 00       	.word	0x0004	; ????
     38e:	00 00       	nop
     390:	04 00       	.word	0x0004	; ????
     392:	88 01       	movw	r16, r16
     394:	08 00       	.word	0x0008	; ????
     396:	88 01       	movw	r16, r16
     398:	08 00       	.word	0x0008	; ????
     39a:	88 01       	movw	r16, r16
     39c:	08 00       	.word	0x0008	; ????
     39e:	37 01       	movw	r6, r14
     3a0:	06 00       	.word	0x0006	; ????
     3a2:	d2 01       	movw	r26, r4
     3a4:	02 00       	.word	0x0002	; ????
     3a6:	88 01       	movw	r16, r16
     3a8:	08 00       	.word	0x0008	; ????
     3aa:	37 01       	movw	r6, r14
     3ac:	06 00       	.word	0x0006	; ????
     3ae:	d2 01       	movw	r26, r4
     3b0:	02 00       	.word	0x0002	; ????
     3b2:	88 01       	movw	r16, r16
     3b4:	10 00       	.word	0x0010	; ????
     3b6:	4b 02       	muls	r20, r27
     3b8:	08 00       	.word	0x0008	; ????
     3ba:	4b 02       	muls	r20, r27
     3bc:	08 00       	.word	0x0008	; ????
     3be:	4b 02       	muls	r20, r27
     3c0:	08 00       	.word	0x0008	; ????
     3c2:	6e 02       	muls	r22, r30
     3c4:	06 00       	.word	0x0006	; ????
     3c6:	d2 01       	movw	r26, r4
     3c8:	02 00       	.word	0x0002	; ????
     3ca:	72 01       	movw	r14, r4
     3cc:	08 00       	.word	0x0008	; ????
     3ce:	37 01       	movw	r6, r14
     3d0:	06 00       	.word	0x0006	; ????
     3d2:	d2 01       	movw	r26, r4
     3d4:	02 00       	.word	0x0002	; ????
     3d6:	88 01       	movw	r16, r16
     3d8:	10 00       	.word	0x0010	; ????
     3da:	10 03       	mulsu	r17, r16
     3dc:	08 00       	.word	0x0008	; ????
     3de:	88 01       	movw	r16, r16
     3e0:	06 00       	.word	0x0006	; ????
     3e2:	88 01       	movw	r16, r16
     3e4:	02 00       	.word	0x0002	; ????
     3e6:	10 03       	mulsu	r17, r16
     3e8:	08 00       	.word	0x0008	; ????
     3ea:	e4 02       	muls	r30, r20
     3ec:	06 00       	.word	0x0006	; ????
     3ee:	bb 02       	muls	r27, r27
     3f0:	02 00       	.word	0x0002	; ????
     3f2:	93 02       	muls	r25, r19
     3f4:	02 00       	.word	0x0002	; ????
     3f6:	6e 02       	muls	r22, r30
     3f8:	02 00       	.word	0x0002	; ????
     3fa:	93 02       	muls	r25, r19
     3fc:	04 00       	.word	0x0004	; ????
     3fe:	00 00       	nop
     400:	04 00       	.word	0x0004	; ????
     402:	9f 01       	movw	r18, r30
     404:	04 00       	.word	0x0004	; ????
     406:	2a 02       	muls	r18, r26
     408:	08 00       	.word	0x0008	; ????
     40a:	0b 02       	muls	r16, r27
     40c:	06 00       	.word	0x0006	; ????
     40e:	ed 01       	movw	r28, r26
     410:	02 00       	.word	0x0002	; ????
     412:	d2 01       	movw	r26, r4
     414:	02 00       	.word	0x0002	; ????
     416:	b8 01       	movw	r22, r16
     418:	02 00       	.word	0x0002	; ????
     41a:	d2 01       	movw	r26, r4
     41c:	02 00       	.word	0x0002	; ????
     41e:	00 00       	nop
     420:	04 00       	.word	0x0004	; ????
     422:	37 01       	movw	r6, r14
     424:	04 00       	.word	0x0004	; ????
     426:	72 01       	movw	r14, r4
     428:	08 00       	.word	0x0008	; ????
     42a:	37 01       	movw	r6, r14
     42c:	06 00       	.word	0x0006	; ????
     42e:	72 01       	movw	r14, r4
     430:	02 00       	.word	0x0002	; ????
     432:	d2 01       	movw	r26, r4
     434:	08 00       	.word	0x0008	; ????
     436:	88 01       	movw	r16, r16
     438:	06 00       	.word	0x0006	; ????
     43a:	d2 01       	movw	r26, r4
     43c:	02 00       	.word	0x0002	; ????
     43e:	4b 02       	muls	r20, r27
     440:	10 00       	.word	0x0010	; ????
     442:	10 03       	mulsu	r17, r16
     444:	08 00       	.word	0x0008	; ????
     446:	88 01       	movw	r16, r16
     448:	06 00       	.word	0x0006	; ????
     44a:	88 01       	movw	r16, r16
     44c:	02 00       	.word	0x0002	; ????
     44e:	10 03       	mulsu	r17, r16
     450:	08 00       	.word	0x0008	; ????
     452:	e4 02       	muls	r30, r20
     454:	06 00       	.word	0x0006	; ????
     456:	bb 02       	muls	r27, r27
     458:	02 00       	.word	0x0002	; ????
     45a:	93 02       	muls	r25, r19
     45c:	02 00       	.word	0x0002	; ????
     45e:	6e 02       	muls	r22, r30
     460:	02 00       	.word	0x0002	; ????
     462:	93 02       	muls	r25, r19
     464:	04 00       	.word	0x0004	; ????
     466:	00 00       	nop
     468:	04 00       	.word	0x0004	; ????
     46a:	9f 01       	movw	r18, r30
     46c:	04 00       	.word	0x0004	; ????
     46e:	2a 02       	muls	r18, r26
     470:	08 00       	.word	0x0008	; ????
     472:	0b 02       	muls	r16, r27
     474:	06 00       	.word	0x0006	; ????
     476:	ed 01       	movw	r28, r26
     478:	02 00       	.word	0x0002	; ????
     47a:	d2 01       	movw	r26, r4
     47c:	02 00       	.word	0x0002	; ????
     47e:	b8 01       	movw	r22, r16
     480:	02 00       	.word	0x0002	; ????
     482:	d2 01       	movw	r26, r4
     484:	02 00       	.word	0x0002	; ????
     486:	00 00       	nop
     488:	04 00       	.word	0x0004	; ????
     48a:	37 01       	movw	r6, r14
     48c:	04 00       	.word	0x0004	; ????
     48e:	72 01       	movw	r14, r4
     490:	08 00       	.word	0x0008	; ????
     492:	37 01       	movw	r6, r14
     494:	06 00       	.word	0x0006	; ????
     496:	d2 01       	movw	r26, r4
     498:	02 00       	.word	0x0002	; ????
     49a:	88 01       	movw	r16, r16
     49c:	08 00       	.word	0x0008	; ????
     49e:	37 01       	movw	r6, r14
     4a0:	06 00       	.word	0x0006	; ????
     4a2:	d2 01       	movw	r26, r4
     4a4:	02 00       	.word	0x0002	; ????
     4a6:	88 01       	movw	r16, r16
     4a8:	10 00       	.word	0x0010	; ????
     4aa:	00 00       	nop
     4ac:	04 00       	.word	0x0004	; ????
	...
     6a6:	00 00       	nop
     6a8:	3c 00       	.word	0x003c	; ????
     6aa:	00 00       	nop
     6ac:	04 00       	.word	0x0004	; ????
     6ae:	00 00       	nop
     6b0:	08 00       	.word	0x0008	; ????
     6b2:	88 01       	movw	r16, r16
     6b4:	0c 00       	.word	0x000c	; ????
     6b6:	05 01       	movw	r0, r10
     6b8:	0c 00       	.word	0x000c	; ????
     6ba:	37 01       	movw	r6, r14
     6bc:	02 00       	.word	0x0002	; ????
     6be:	5d 01       	movw	r10, r26
     6c0:	02 00       	.word	0x0002	; ????
     6c2:	88 01       	movw	r16, r16
     6c4:	08 00       	.word	0x0008	; ????
     6c6:	05 01       	movw	r0, r10
     6c8:	08 00       	.word	0x0008	; ????
     6ca:	37 01       	movw	r6, r14
     6cc:	02 00       	.word	0x0002	; ????
     6ce:	5d 01       	movw	r10, r26
     6d0:	02 00       	.word	0x0002	; ????
     6d2:	26 01       	movw	r4, r12
     6d4:	24 00       	.word	0x0024	; ????
     6d6:	00 00       	nop
     6d8:	04 00       	.word	0x0004	; ????
     6da:	5d 01       	movw	r10, r26
     6dc:	0c 00       	.word	0x000c	; ????
     6de:	e9 00       	.word	0x00e9	; ????
     6e0:	0c 00       	.word	0x000c	; ????
     6e2:	37 01       	movw	r6, r14
     6e4:	02 00       	.word	0x0002	; ????
     6e6:	26 01       	movw	r4, r12
     6e8:	02 00       	.word	0x0002	; ????
     6ea:	5d 01       	movw	r10, r26
     6ec:	08 00       	.word	0x0008	; ????
     6ee:	e9 00       	.word	0x00e9	; ????
     6f0:	08 00       	.word	0x0008	; ????
     6f2:	37 01       	movw	r6, r14
     6f4:	02 00       	.word	0x0002	; ????
     6f6:	26 01       	movw	r4, r12
     6f8:	02 00       	.word	0x0002	; ????
     6fa:	05 01       	movw	r0, r10
     6fc:	24 00       	.word	0x0024	; ????
     6fe:	00 00       	nop
     700:	04 00       	.word	0x0004	; ????
     702:	10 03       	mulsu	r17, r16
     704:	0c 00       	.word	0x000c	; ????
     706:	0b 02       	muls	r16, r27
     708:	0c 00       	.word	0x000c	; ????
     70a:	6e 02       	muls	r22, r30
     70c:	02 00       	.word	0x0002	; ????
     70e:	bb 02       	muls	r27, r27
     710:	02 00       	.word	0x0002	; ????
     712:	10 03       	mulsu	r17, r16
     714:	08 00       	.word	0x0008	; ????
     716:	0b 02       	muls	r16, r27
     718:	08 00       	.word	0x0008	; ????
     71a:	6e 02       	muls	r22, r30
     71c:	02 00       	.word	0x0002	; ????
     71e:	bb 02       	muls	r27, r27
     720:	02 00       	.word	0x0002	; ????
     722:	4b 02       	muls	r20, r27
     724:	24 00       	.word	0x0024	; ????
     726:	00 00       	nop
     728:	04 00       	.word	0x0004	; ????
     72a:	bb 02       	muls	r27, r27
     72c:	0c 00       	.word	0x000c	; ????
     72e:	d2 01       	movw	r26, r4
     730:	0c 00       	.word	0x000c	; ????
     732:	6e 02       	muls	r22, r30
     734:	02 00       	.word	0x0002	; ????
     736:	4b 02       	muls	r20, r27
     738:	02 00       	.word	0x0002	; ????
     73a:	bb 02       	muls	r27, r27
     73c:	08 00       	.word	0x0008	; ????
     73e:	d2 01       	movw	r26, r4
     740:	08 00       	.word	0x0008	; ????
     742:	6e 02       	muls	r22, r30
     744:	02 00       	.word	0x0002	; ????
     746:	4b 02       	muls	r20, r27
     748:	02 00       	.word	0x0002	; ????
     74a:	0b 02       	muls	r16, r27
     74c:	24 00       	.word	0x0024	; ????
     74e:	00 00       	nop
     750:	04 00       	.word	0x0004	; ????
     752:	10 03       	mulsu	r17, r16
     754:	0c 00       	.word	0x000c	; ????
     756:	0b 02       	muls	r16, r27
     758:	0c 00       	.word	0x000c	; ????
     75a:	6e 02       	muls	r22, r30
     75c:	02 00       	.word	0x0002	; ????
     75e:	bb 02       	muls	r27, r27
     760:	02 00       	.word	0x0002	; ????
     762:	10 03       	mulsu	r17, r16
     764:	08 00       	.word	0x0008	; ????
     766:	0b 02       	muls	r16, r27
     768:	08 00       	.word	0x0008	; ????
     76a:	6e 02       	muls	r22, r30
     76c:	02 00       	.word	0x0002	; ????
     76e:	bb 02       	muls	r27, r27
     770:	02 00       	.word	0x0002	; ????
     772:	4b 02       	muls	r20, r27
     774:	24 00       	.word	0x0024	; ????
     776:	00 00       	nop
     778:	04 00       	.word	0x0004	; ????
     77a:	bb 02       	muls	r27, r27
     77c:	0c 00       	.word	0x000c	; ????
     77e:	d2 01       	movw	r26, r4
     780:	0c 00       	.word	0x000c	; ????
     782:	4b 02       	muls	r20, r27
     784:	08 00       	.word	0x0008	; ????
     786:	6e 02       	muls	r22, r30
     788:	04 00       	.word	0x0004	; ????
     78a:	4b 02       	muls	r20, r27
     78c:	08 00       	.word	0x0008	; ????
     78e:	d2 01       	movw	r26, r4
     790:	04 00       	.word	0x0004	; ????
     792:	0b 02       	muls	r16, r27
     794:	24 00       	.word	0x0024	; ????
     796:	00 00       	nop
     798:	08 00       	.word	0x0008	; ????
	...
     9c6:	00 00       	nop
     9c8:	72 00       	.word	0x0072	; ????
     9ca:	00 00       	nop
     9cc:	08 00       	.word	0x0008	; ????
     9ce:	00 00       	nop
     9d0:	08 00       	.word	0x0008	; ????
     9d2:	26 01       	movw	r4, r12
     9d4:	0e 00       	.word	0x000e	; ????
     9d6:	88 01       	movw	r16, r16
     9d8:	1c 00       	.word	0x001c	; ????
     9da:	72 01       	movw	r14, r4
     9dc:	07 00       	.word	0x0007	; ????
     9de:	b8 01       	movw	r22, r16
     9e0:	07 00       	.word	0x0007	; ????
     9e2:	88 01       	movw	r16, r16
     9e4:	31 00       	.word	0x0031	; ????
     9e6:	b8 01       	movw	r22, r16
     9e8:	07 00       	.word	0x0007	; ????
     9ea:	ed 01       	movw	r28, r26
     9ec:	04 00       	.word	0x0004	; ????
     9ee:	ed 01       	movw	r28, r26
     9f0:	05 00       	.word	0x0005	; ????
     9f2:	ed 01       	movw	r28, r26
     9f4:	05 00       	.word	0x0005	; ????
     9f6:	ed 01       	movw	r28, r26
     9f8:	1c 00       	.word	0x001c	; ????
     9fa:	b8 01       	movw	r22, r16
     9fc:	04 00       	.word	0x0004	; ????
     9fe:	0b 02       	muls	r16, r27
     a00:	05 00       	.word	0x0005	; ????
     a02:	ed 01       	movw	r28, r26
     a04:	05 00       	.word	0x0005	; ????
     a06:	88 01       	movw	r16, r16
     a08:	15 00       	.word	0x0015	; ????
     a0a:	10 03       	mulsu	r17, r16
     a0c:	07 00       	.word	0x0007	; ????
     a0e:	e4 02       	muls	r30, r20
     a10:	04 00       	.word	0x0004	; ????
     a12:	4b 02       	muls	r20, r27
     a14:	05 00       	.word	0x0005	; ????
     a16:	10 03       	mulsu	r17, r16
     a18:	05 00       	.word	0x0005	; ????
     a1a:	e4 02       	muls	r30, r20
     a1c:	04 00       	.word	0x0004	; ????
     a1e:	4b 02       	muls	r20, r27
     a20:	05 00       	.word	0x0005	; ????
     a22:	ed 01       	movw	r28, r26
     a24:	05 00       	.word	0x0005	; ????
     a26:	4b 02       	muls	r20, r27
     a28:	1c 00       	.word	0x001c	; ????
     a2a:	b8 01       	movw	r22, r16
     a2c:	04 00       	.word	0x0004	; ????
     a2e:	0b 02       	muls	r16, r27
     a30:	05 00       	.word	0x0005	; ????
     a32:	ed 01       	movw	r28, r26
     a34:	05 00       	.word	0x0005	; ????
     a36:	b8 01       	movw	r22, r16
     a38:	04 00       	.word	0x0004	; ????
     a3a:	88 01       	movw	r16, r16
     a3c:	05 00       	.word	0x0005	; ????
     a3e:	72 01       	movw	r14, r4
     a40:	05 00       	.word	0x0005	; ????
     a42:	26 01       	movw	r4, r12
     a44:	0e 00       	.word	0x000e	; ????
     a46:	88 01       	movw	r16, r16
     a48:	1c 00       	.word	0x001c	; ????
     a4a:	72 01       	movw	r14, r4
     a4c:	07 00       	.word	0x0007	; ????
     a4e:	b8 01       	movw	r22, r16
     a50:	07 00       	.word	0x0007	; ????
     a52:	88 01       	movw	r16, r16
     a54:	31 00       	.word	0x0031	; ????
     a56:	b8 01       	movw	r22, r16
     a58:	07 00       	.word	0x0007	; ????
     a5a:	ed 01       	movw	r28, r26
     a5c:	04 00       	.word	0x0004	; ????
     a5e:	ed 01       	movw	r28, r26
     a60:	05 00       	.word	0x0005	; ????
     a62:	ed 01       	movw	r28, r26
     a64:	05 00       	.word	0x0005	; ????
     a66:	ed 01       	movw	r28, r26
     a68:	1c 00       	.word	0x001c	; ????
     a6a:	b8 01       	movw	r22, r16
     a6c:	04 00       	.word	0x0004	; ????
     a6e:	0b 02       	muls	r16, r27
     a70:	05 00       	.word	0x0005	; ????
     a72:	ed 01       	movw	r28, r26
     a74:	05 00       	.word	0x0005	; ????
     a76:	88 01       	movw	r16, r16
     a78:	15 00       	.word	0x0015	; ????
     a7a:	10 03       	mulsu	r17, r16
     a7c:	07 00       	.word	0x0007	; ????
     a7e:	e4 02       	muls	r30, r20
     a80:	04 00       	.word	0x0004	; ????
     a82:	4b 02       	muls	r20, r27
     a84:	05 00       	.word	0x0005	; ????
     a86:	10 03       	mulsu	r17, r16
     a88:	05 00       	.word	0x0005	; ????
     a8a:	e4 02       	muls	r30, r20
     a8c:	04 00       	.word	0x0004	; ????
     a8e:	4b 02       	muls	r20, r27
     a90:	05 00       	.word	0x0005	; ????
     a92:	ed 01       	movw	r28, r26
     a94:	05 00       	.word	0x0005	; ????
     a96:	4b 02       	muls	r20, r27
     a98:	1c 00       	.word	0x001c	; ????
     a9a:	b8 01       	movw	r22, r16
     a9c:	04 00       	.word	0x0004	; ????
     a9e:	0b 02       	muls	r16, r27
     aa0:	05 00       	.word	0x0005	; ????
     aa2:	ed 01       	movw	r28, r26
     aa4:	05 00       	.word	0x0005	; ????
     aa6:	b8 01       	movw	r22, r16
     aa8:	04 00       	.word	0x0004	; ????
     aaa:	88 01       	movw	r16, r16
     aac:	05 00       	.word	0x0005	; ????
     aae:	72 01       	movw	r14, r4
     ab0:	05 00       	.word	0x0005	; ????
     ab2:	49 01       	movw	r8, r18
     ab4:	07 00       	.word	0x0007	; ????
     ab6:	b8 01       	movw	r22, r16
     ab8:	07 00       	.word	0x0007	; ????
     aba:	b8 01       	movw	r22, r16
     abc:	1c 00       	.word	0x001c	; ????
     abe:	9f 01       	movw	r18, r30
     ac0:	07 00       	.word	0x0007	; ????
     ac2:	ed 01       	movw	r28, r26
     ac4:	07 00       	.word	0x0007	; ????
     ac6:	b8 01       	movw	r22, r16
     ac8:	31 00       	.word	0x0031	; ????
     aca:	ed 01       	movw	r28, r26
     acc:	07 00       	.word	0x0007	; ????
     ace:	2a 02       	muls	r18, r26
     ad0:	04 00       	.word	0x0004	; ????
     ad2:	2a 02       	muls	r18, r26
     ad4:	05 00       	.word	0x0005	; ????
     ad6:	2a 02       	muls	r18, r26
     ad8:	05 00       	.word	0x0005	; ????
     ada:	2a 02       	muls	r18, r26
     adc:	1c 00       	.word	0x001c	; ????
     ade:	ed 01       	movw	r28, r26
     ae0:	04 00       	.word	0x0004	; ????
     ae2:	4b 02       	muls	r20, r27
     ae4:	05 00       	.word	0x0005	; ????
     ae6:	2a 02       	muls	r18, r26
     ae8:	05 00       	.word	0x0005	; ????
     aea:	b8 01       	movw	r22, r16
     aec:	15 00       	.word	0x0015	; ????
     aee:	70 03       	mulsu	r23, r16
     af0:	07 00       	.word	0x0007	; ????
     af2:	3e 03       	fmul	r19, r22
     af4:	04 00       	.word	0x0004	; ????
     af6:	93 02       	muls	r25, r19
     af8:	05 00       	.word	0x0005	; ????
     afa:	70 03       	mulsu	r23, r16
     afc:	05 00       	.word	0x0005	; ????
     afe:	3e 03       	fmul	r19, r22
     b00:	04 00       	.word	0x0004	; ????
     b02:	93 02       	muls	r25, r19
     b04:	05 00       	.word	0x0005	; ????
     b06:	2a 02       	muls	r18, r26
     b08:	05 00       	.word	0x0005	; ????
     b0a:	93 02       	muls	r25, r19
     b0c:	1c 00       	.word	0x001c	; ????
     b0e:	ed 01       	movw	r28, r26
     b10:	04 00       	.word	0x0004	; ????
     b12:	4b 02       	muls	r20, r27
     b14:	05 00       	.word	0x0005	; ????
     b16:	2a 02       	muls	r18, r26
     b18:	05 00       	.word	0x0005	; ????
     b1a:	ed 01       	movw	r28, r26
     b1c:	04 00       	.word	0x0004	; ????
     b1e:	b8 01       	movw	r22, r16
     b20:	05 00       	.word	0x0005	; ????
     b22:	9f 01       	movw	r18, r30
     b24:	05 00       	.word	0x0005	; ????
     b26:	49 01       	movw	r8, r18
     b28:	07 00       	.word	0x0007	; ????
     b2a:	b8 01       	movw	r22, r16
     b2c:	07 00       	.word	0x0007	; ????
     b2e:	b8 01       	movw	r22, r16
     b30:	1c 00       	.word	0x001c	; ????
     b32:	9f 01       	movw	r18, r30
     b34:	07 00       	.word	0x0007	; ????
     b36:	ed 01       	movw	r28, r26
     b38:	07 00       	.word	0x0007	; ????
     b3a:	b8 01       	movw	r22, r16
     b3c:	31 00       	.word	0x0031	; ????
     b3e:	ed 01       	movw	r28, r26
     b40:	07 00       	.word	0x0007	; ????
     b42:	2a 02       	muls	r18, r26
     b44:	04 00       	.word	0x0004	; ????
     b46:	2a 02       	muls	r18, r26
     b48:	05 00       	.word	0x0005	; ????
     b4a:	2a 02       	muls	r18, r26
     b4c:	05 00       	.word	0x0005	; ????
     b4e:	2a 02       	muls	r18, r26
     b50:	1c 00       	.word	0x001c	; ????
     b52:	ed 01       	movw	r28, r26
     b54:	04 00       	.word	0x0004	; ????
     b56:	4b 02       	muls	r20, r27
     b58:	05 00       	.word	0x0005	; ????
     b5a:	2a 02       	muls	r18, r26
     b5c:	05 00       	.word	0x0005	; ????
     b5e:	b8 01       	movw	r22, r16
     b60:	15 00       	.word	0x0015	; ????
     b62:	70 03       	mulsu	r23, r16
     b64:	07 00       	.word	0x0007	; ????
     b66:	3e 03       	fmul	r19, r22
     b68:	04 00       	.word	0x0004	; ????
     b6a:	93 02       	muls	r25, r19
     b6c:	05 00       	.word	0x0005	; ????
     b6e:	70 03       	mulsu	r23, r16
     b70:	05 00       	.word	0x0005	; ????
     b72:	3e 03       	fmul	r19, r22
     b74:	04 00       	.word	0x0004	; ????
     b76:	93 02       	muls	r25, r19
     b78:	05 00       	.word	0x0005	; ????
     b7a:	2a 02       	muls	r18, r26
     b7c:	05 00       	.word	0x0005	; ????
     b7e:	93 02       	muls	r25, r19
     b80:	1c 00       	.word	0x001c	; ????
     b82:	e4 02       	muls	r30, r20
     b84:	0e 00       	.word	0x000e	; ????
     b86:	3e 03       	fmul	r19, r22
     b88:	0e 00       	.word	0x000e	; ????
     b8a:	70 03       	mulsu	r23, r16
     b8c:	2a 00       	.word	0x002a	; ????
     b8e:	00 00       	nop
     b90:	08 00       	.word	0x0008	; ????
	...
     ce6:	00 00       	nop
     ce8:	8a 00       	.word	0x008a	; ????
     cea:	00 00       	nop
     cec:	03 00       	.word	0x0003	; ????
     cee:	00 00       	nop
     cf0:	08 00       	.word	0x0008	; ????
     cf2:	5d 01       	movw	r10, r26
     cf4:	09 00       	.word	0x0009	; ????
     cf6:	b8 01       	movw	r22, r16
     cf8:	03 00       	.word	0x0003	; ????
     cfa:	d2 01       	movw	r26, r4
     cfc:	09 00       	.word	0x0009	; ????
     cfe:	b8 01       	movw	r22, r16
     d00:	03 00       	.word	0x0003	; ????
     d02:	5d 01       	movw	r10, r26
     d04:	15 00       	.word	0x0015	; ????
     d06:	00 00       	nop
     d08:	03 00       	.word	0x0003	; ????
     d0a:	5d 01       	movw	r10, r26
     d0c:	09 00       	.word	0x0009	; ????
     d0e:	b8 01       	movw	r22, r16
     d10:	03 00       	.word	0x0003	; ????
     d12:	d2 01       	movw	r26, r4
     d14:	03 00       	.word	0x0003	; ????
     d16:	b8 01       	movw	r22, r16
     d18:	03 00       	.word	0x0003	; ????
     d1a:	88 01       	movw	r16, r16
     d1c:	03 00       	.word	0x0003	; ????
     d1e:	5d 01       	movw	r10, r26
     d20:	03 00       	.word	0x0003	; ????
     d22:	49 01       	movw	r8, r18
     d24:	15 00       	.word	0x0015	; ????
     d26:	00 00       	nop
     d28:	03 00       	.word	0x0003	; ????
     d2a:	49 01       	movw	r8, r18
     d2c:	03 00       	.word	0x0003	; ????
     d2e:	37 01       	movw	r6, r14
     d30:	03 00       	.word	0x0003	; ????
     d32:	49 01       	movw	r8, r18
     d34:	03 00       	.word	0x0003	; ????
     d36:	5d 01       	movw	r10, r26
     d38:	03 00       	.word	0x0003	; ????
     d3a:	88 01       	movw	r16, r16
     d3c:	03 00       	.word	0x0003	; ????
     d3e:	72 01       	movw	r14, r4
     d40:	03 00       	.word	0x0003	; ????
     d42:	88 01       	movw	r16, r16
     d44:	03 00       	.word	0x0003	; ????
     d46:	b8 01       	movw	r22, r16
     d48:	03 00       	.word	0x0003	; ????
     d4a:	0b 02       	muls	r16, r27
     d4c:	0f 00       	.word	0x000f	; ????
     d4e:	00 00       	nop
     d50:	03 00       	.word	0x0003	; ????
     d52:	d2 01       	movw	r26, r4
     d54:	03 00       	.word	0x0003	; ????
     d56:	b8 01       	movw	r22, r16
     d58:	03 00       	.word	0x0003	; ????
     d5a:	88 01       	movw	r16, r16
     d5c:	0f 00       	.word	0x000f	; ????
     d5e:	00 00       	nop
     d60:	03 00       	.word	0x0003	; ????
     d62:	b8 01       	movw	r22, r16
     d64:	03 00       	.word	0x0003	; ????
     d66:	d2 01       	movw	r26, r4
     d68:	03 00       	.word	0x0003	; ????
     d6a:	b8 01       	movw	r22, r16
     d6c:	0f 00       	.word	0x000f	; ????
     d6e:	00 00       	nop
     d70:	03 00       	.word	0x0003	; ????
     d72:	0b 02       	muls	r16, r27
     d74:	06 00       	.word	0x0006	; ????
     d76:	5d 01       	movw	r10, r26
     d78:	09 00       	.word	0x0009	; ????
     d7a:	b8 01       	movw	r22, r16
     d7c:	03 00       	.word	0x0003	; ????
     d7e:	d2 01       	movw	r26, r4
     d80:	09 00       	.word	0x0009	; ????
     d82:	b8 01       	movw	r22, r16
     d84:	03 00       	.word	0x0003	; ????
     d86:	5d 01       	movw	r10, r26
     d88:	15 00       	.word	0x0015	; ????
     d8a:	00 00       	nop
     d8c:	03 00       	.word	0x0003	; ????
     d8e:	5d 01       	movw	r10, r26
     d90:	09 00       	.word	0x0009	; ????
     d92:	88 01       	movw	r16, r16
     d94:	03 00       	.word	0x0003	; ????
     d96:	b8 01       	movw	r22, r16
     d98:	03 00       	.word	0x0003	; ????
     d9a:	5d 01       	movw	r10, r26
     d9c:	03 00       	.word	0x0003	; ????
     d9e:	88 01       	movw	r16, r16
     da0:	03 00       	.word	0x0003	; ????
     da2:	b8 01       	movw	r22, r16
     da4:	03 00       	.word	0x0003	; ????
     da6:	d2 01       	movw	r26, r4
     da8:	0f 00       	.word	0x000f	; ????
     daa:	00 00       	nop
     dac:	03 00       	.word	0x0003	; ????
     dae:	4b 02       	muls	r20, r27
     db0:	03 00       	.word	0x0003	; ????
     db2:	2a 02       	muls	r18, r26
     db4:	03 00       	.word	0x0003	; ????
     db6:	93 02       	muls	r25, r19
     db8:	0f 00       	.word	0x000f	; ????
     dba:	4b 02       	muls	r20, r27
     dbc:	03 00       	.word	0x0003	; ????
     dbe:	d2 01       	movw	r26, r4
     dc0:	05 00       	.word	0x0005	; ????
     dc2:	4b 02       	muls	r20, r27
     dc4:	01 00       	.word	0x0001	; ????
     dc6:	b8 01       	movw	r22, r16
     dc8:	0f 00       	.word	0x000f	; ????
     dca:	00 00       	nop
     dcc:	03 00       	.word	0x0003	; ????
     dce:	88 01       	movw	r16, r16
     dd0:	03 00       	.word	0x0003	; ????
     dd2:	5d 01       	movw	r10, r26
     dd4:	03 00       	.word	0x0003	; ????
     dd6:	49 01       	movw	r8, r18
     dd8:	03 00       	.word	0x0003	; ????
     dda:	00 00       	nop
     ddc:	03 00       	.word	0x0003	; ????
     dde:	4b 02       	muls	r20, r27
     de0:	03 00       	.word	0x0003	; ????
     de2:	0b 02       	muls	r16, r27
     de4:	06 00       	.word	0x0006	; ????
     de6:	49 01       	movw	r8, r18
     de8:	03 00       	.word	0x0003	; ????
     dea:	b8 01       	movw	r22, r16
     dec:	03 00       	.word	0x0003	; ????
     dee:	88 01       	movw	r16, r16
     df0:	03 00       	.word	0x0003	; ????
     df2:	5d 01       	movw	r10, r26
     df4:	0f 00       	.word	0x000f	; ????
     df6:	00 00       	nop
     df8:	03 00       	.word	0x0003	; ????
     dfa:	5d 01       	movw	r10, r26
     dfc:	03 00       	.word	0x0003	; ????
     dfe:	00 00       	nop
     e00:	03 00       	.word	0x0003	; ????
     e02:	5d 01       	movw	r10, r26
     e04:	01 00       	.word	0x0001	; ????
     e06:	88 01       	movw	r16, r16
     e08:	01 00       	.word	0x0001	; ????
     e0a:	b8 01       	movw	r22, r16
     e0c:	01 00       	.word	0x0001	; ????
     e0e:	d2 01       	movw	r26, r4
     e10:	03 00       	.word	0x0003	; ????
     e12:	00 00       	nop
     e14:	03 00       	.word	0x0003	; ????
     e16:	88 01       	movw	r16, r16
     e18:	01 00       	.word	0x0001	; ????
     e1a:	00 00       	nop
     e1c:	02 00       	.word	0x0002	; ????
     e1e:	37 01       	movw	r6, r14
     e20:	01 00       	.word	0x0001	; ????
     e22:	00 00       	nop
     e24:	02 00       	.word	0x0002	; ????
     e26:	e9 00       	.word	0x00e9	; ????
     e28:	01 00       	.word	0x0001	; ????
     e2a:	00 00       	nop
     e2c:	02 00       	.word	0x0002	; ????
     e2e:	26 01       	movw	r4, r12
     e30:	03 00       	.word	0x0003	; ????
     e32:	37 01       	movw	r6, r14
     e34:	03 00       	.word	0x0003	; ????
     e36:	49 01       	movw	r8, r18
     e38:	03 00       	.word	0x0003	; ????
     e3a:	5d 01       	movw	r10, r26
     e3c:	12 00       	.word	0x0012	; ????
     e3e:	37 01       	movw	r6, r14
     e40:	06 00       	.word	0x0006	; ????
     e42:	26 01       	movw	r4, r12
     e44:	06 00       	.word	0x0006	; ????
     e46:	05 01       	movw	r0, r10
     e48:	06 00       	.word	0x0006	; ????
     e4a:	37 01       	movw	r6, r14
     e4c:	06 00       	.word	0x0006	; ????
     e4e:	26 01       	movw	r4, r12
     e50:	06 00       	.word	0x0006	; ????
     e52:	e9 00       	.word	0x00e9	; ????
     e54:	12 00       	.word	0x0012	; ????
     e56:	c4 00       	.word	0x00c4	; ????
     e58:	06 00       	.word	0x0006	; ????
     e5a:	ae 00       	.word	0x00ae	; ????
     e5c:	0f 00       	.word	0x000f	; ????
     e5e:	00 00       	nop
     e60:	03 00       	.word	0x0003	; ????
     e62:	37 01       	movw	r6, r14
     e64:	03 00       	.word	0x0003	; ????
     e66:	26 01       	movw	r4, r12
     e68:	03 00       	.word	0x0003	; ????
     e6a:	f7 00       	.word	0x00f7	; ????
     e6c:	06 00       	.word	0x0006	; ????
     e6e:	05 01       	movw	r0, r10
     e70:	09 00       	.word	0x0009	; ????
     e72:	00 00       	nop
     e74:	02 00       	.word	0x0002	; ????
     e76:	ae 00       	.word	0x00ae	; ????
     e78:	06 00       	.word	0x0006	; ????
     e7a:	dc 00       	.word	0x00dc	; ????
     e7c:	06 00       	.word	0x0006	; ????
     e7e:	05 01       	movw	r0, r10
     e80:	06 00       	.word	0x0006	; ????
     e82:	5d 01       	movw	r10, r26
     e84:	06 00       	.word	0x0006	; ????
     e86:	37 01       	movw	r6, r14
     e88:	06 00       	.word	0x0006	; ????
     e8a:	15 01       	movw	r2, r10
     e8c:	06 00       	.word	0x0006	; ????
     e8e:	26 01       	movw	r4, r12
     e90:	0c 00       	.word	0x000c	; ????
     e92:	37 01       	movw	r6, r14
     e94:	06 00       	.word	0x0006	; ????
     e96:	26 01       	movw	r4, r12
     e98:	0f 00       	.word	0x000f	; ????
     e9a:	4b 02       	muls	r20, r27
     e9c:	03 00       	.word	0x0003	; ????
     e9e:	6e 02       	muls	r22, r30
     ea0:	03 00       	.word	0x0003	; ????
     ea2:	93 02       	muls	r25, r19
     ea4:	03 00       	.word	0x0003	; ????
     ea6:	bb 02       	muls	r27, r27
     ea8:	12 00       	.word	0x0012	; ????
     eaa:	6e 02       	muls	r22, r30
     eac:	06 00       	.word	0x0006	; ????
     eae:	4b 02       	muls	r20, r27
     eb0:	06 00       	.word	0x0006	; ????
     eb2:	0b 02       	muls	r16, r27
     eb4:	06 00       	.word	0x0006	; ????
     eb6:	6e 02       	muls	r22, r30
     eb8:	06 00       	.word	0x0006	; ????
     eba:	4b 02       	muls	r20, r27
     ebc:	06 00       	.word	0x0006	; ????
     ebe:	d2 01       	movw	r26, r4
     ec0:	12 00       	.word	0x0012	; ????
     ec2:	88 01       	movw	r16, r16
     ec4:	06 00       	.word	0x0006	; ????
     ec6:	5d 01       	movw	r10, r26
     ec8:	0f 00       	.word	0x000f	; ????
     eca:	00 00       	nop
     ecc:	03 00       	.word	0x0003	; ????
     ece:	6e 02       	muls	r22, r30
     ed0:	03 00       	.word	0x0003	; ????
     ed2:	4b 02       	muls	r20, r27
     ed4:	03 00       	.word	0x0003	; ????
     ed6:	ed 01       	movw	r28, r26
     ed8:	06 00       	.word	0x0006	; ????
     eda:	0b 02       	muls	r16, r27
     edc:	09 00       	.word	0x0009	; ????
     ede:	00 00       	nop
     ee0:	02 00       	.word	0x0002	; ????
     ee2:	5d 01       	movw	r10, r26
     ee4:	06 00       	.word	0x0006	; ????
     ee6:	b8 01       	movw	r22, r16
     ee8:	06 00       	.word	0x0006	; ????
     eea:	0b 02       	muls	r16, r27
     eec:	06 00       	.word	0x0006	; ????
     eee:	bb 02       	muls	r27, r27
     ef0:	06 00       	.word	0x0006	; ????
     ef2:	6e 02       	muls	r22, r30
     ef4:	06 00       	.word	0x0006	; ????
     ef6:	4b 02       	muls	r20, r27
     ef8:	0c 00       	.word	0x000c	; ????
     efa:	0b 02       	muls	r16, r27
     efc:	09 00       	.word	0x0009	; ????
     efe:	b8 01       	movw	r22, r16
     f00:	03 00       	.word	0x0003	; ????
     f02:	d2 01       	movw	r26, r4
     f04:	0f 00       	.word	0x000f	; ????
     f06:	00 00       	nop
     f08:	03 00       	.word	0x0003	; ????
     f0a:	d2 01       	movw	r26, r4
     f0c:	03 00       	.word	0x0003	; ????
     f0e:	00 00       	nop
     f10:	08 00       	.word	0x0008	; ????
	...
    1006:	00 00       	nop
    1008:	ad 00       	.word	0x00ad	; ????
    100a:	00 00       	nop
    100c:	04 00       	.word	0x0004	; ????
    100e:	00 00       	nop
    1010:	04 00       	.word	0x0004	; ????
    1012:	26 01       	movw	r4, r12
    1014:	04 00       	.word	0x0004	; ????
    1016:	72 01       	movw	r14, r4
    1018:	04 00       	.word	0x0004	; ????
    101a:	b8 01       	movw	r22, r16
    101c:	04 00       	.word	0x0004	; ????
    101e:	b8 01       	movw	r22, r16
    1020:	08 00       	.word	0x0008	; ????
    1022:	70 03       	mulsu	r23, r16
    1024:	04 00       	.word	0x0004	; ????
    1026:	70 03       	mulsu	r23, r16
    1028:	04 00       	.word	0x0004	; ????
    102a:	00 00       	nop
    102c:	04 00       	.word	0x0004	; ????
    102e:	e4 02       	muls	r30, r20
    1030:	04 00       	.word	0x0004	; ????
    1032:	e4 02       	muls	r30, r20
    1034:	04 00       	.word	0x0004	; ????
    1036:	00 00       	nop
    1038:	04 00       	.word	0x0004	; ????
    103a:	26 01       	movw	r4, r12
    103c:	04 00       	.word	0x0004	; ????
    103e:	26 01       	movw	r4, r12
    1040:	04 00       	.word	0x0004	; ????
    1042:	72 01       	movw	r14, r4
    1044:	04 00       	.word	0x0004	; ????
    1046:	b8 01       	movw	r22, r16
    1048:	04 00       	.word	0x0004	; ????
    104a:	b8 01       	movw	r22, r16
    104c:	08 00       	.word	0x0008	; ????
    104e:	70 03       	mulsu	r23, r16
    1050:	04 00       	.word	0x0004	; ????
    1052:	70 03       	mulsu	r23, r16
    1054:	04 00       	.word	0x0004	; ????
    1056:	00 00       	nop
    1058:	04 00       	.word	0x0004	; ????
    105a:	10 03       	mulsu	r17, r16
    105c:	04 00       	.word	0x0004	; ????
    105e:	10 03       	mulsu	r17, r16
    1060:	04 00       	.word	0x0004	; ????
    1062:	00 00       	nop
    1064:	04 00       	.word	0x0004	; ????
    1066:	15 01       	movw	r2, r10
    1068:	04 00       	.word	0x0004	; ????
    106a:	15 01       	movw	r2, r10
    106c:	04 00       	.word	0x0004	; ????
    106e:	4a 01       	movw	r8, r20
    1070:	04 00       	.word	0x0004	; ????
    1072:	ee 01       	movw	r28, r28
    1074:	04 00       	.word	0x0004	; ????
    1076:	ee 01       	movw	r28, r28
    1078:	08 00       	.word	0x0008	; ????
    107a:	dc 03       	fmulsu	r21, r20
    107c:	04 00       	.word	0x0004	; ????
    107e:	dc 03       	fmulsu	r21, r20
    1080:	04 00       	.word	0x0004	; ????
    1082:	00 00       	nop
    1084:	04 00       	.word	0x0004	; ????
    1086:	10 03       	mulsu	r17, r16
    1088:	04 00       	.word	0x0004	; ????
    108a:	10 03       	mulsu	r17, r16
    108c:	04 00       	.word	0x0004	; ????
    108e:	00 00       	nop
    1090:	04 00       	.word	0x0004	; ????
    1092:	15 01       	movw	r2, r10
    1094:	04 00       	.word	0x0004	; ????
    1096:	15 01       	movw	r2, r10
    1098:	04 00       	.word	0x0004	; ????
    109a:	4a 01       	movw	r8, r20
    109c:	04 00       	.word	0x0004	; ????
    109e:	ee 01       	movw	r28, r28
    10a0:	04 00       	.word	0x0004	; ????
    10a2:	ee 01       	movw	r28, r28
    10a4:	08 00       	.word	0x0008	; ????
    10a6:	dc 03       	fmulsu	r21, r20
    10a8:	04 00       	.word	0x0004	; ????
    10aa:	dc 03       	fmulsu	r21, r20
    10ac:	04 00       	.word	0x0004	; ????
    10ae:	00 00       	nop
    10b0:	04 00       	.word	0x0004	; ????
    10b2:	e4 02       	muls	r30, r20
    10b4:	04 00       	.word	0x0004	; ????
    10b6:	e4 02       	muls	r30, r20
    10b8:	04 00       	.word	0x0004	; ????
    10ba:	00 00       	nop
    10bc:	04 00       	.word	0x0004	; ????
    10be:	26 01       	movw	r4, r12
    10c0:	04 00       	.word	0x0004	; ????
    10c2:	26 01       	movw	r4, r12
    10c4:	04 00       	.word	0x0004	; ????
    10c6:	72 01       	movw	r14, r4
    10c8:	04 00       	.word	0x0004	; ????
    10ca:	b8 01       	movw	r22, r16
    10cc:	04 00       	.word	0x0004	; ????
    10ce:	4b 02       	muls	r20, r27
    10d0:	08 00       	.word	0x0008	; ????
    10d2:	97 04       	cpc	r9, r7
    10d4:	04 00       	.word	0x0004	; ????
    10d6:	97 04       	cpc	r9, r7
    10d8:	04 00       	.word	0x0004	; ????
    10da:	00 00       	nop
    10dc:	04 00       	.word	0x0004	; ????
    10de:	70 03       	mulsu	r23, r16
    10e0:	04 00       	.word	0x0004	; ????
    10e2:	70 03       	mulsu	r23, r16
    10e4:	04 00       	.word	0x0004	; ????
    10e6:	00 00       	nop
    10e8:	04 00       	.word	0x0004	; ????
    10ea:	26 01       	movw	r4, r12
    10ec:	04 00       	.word	0x0004	; ????
    10ee:	26 01       	movw	r4, r12
    10f0:	04 00       	.word	0x0004	; ????
    10f2:	72 01       	movw	r14, r4
    10f4:	04 00       	.word	0x0004	; ????
    10f6:	b8 01       	movw	r22, r16
    10f8:	04 00       	.word	0x0004	; ????
    10fa:	4b 02       	muls	r20, r27
    10fc:	08 00       	.word	0x0008	; ????
    10fe:	97 04       	cpc	r9, r7
    1100:	04 00       	.word	0x0004	; ????
    1102:	97 04       	cpc	r9, r7
    1104:	04 00       	.word	0x0004	; ????
    1106:	00 00       	nop
    1108:	04 00       	.word	0x0004	; ????
    110a:	dc 03       	fmulsu	r21, r20
    110c:	04 00       	.word	0x0004	; ????
    110e:	dc 03       	fmulsu	r21, r20
    1110:	04 00       	.word	0x0004	; ????
    1112:	00 00       	nop
    1114:	04 00       	.word	0x0004	; ????
    1116:	4a 01       	movw	r8, r20
    1118:	04 00       	.word	0x0004	; ????
    111a:	4a 01       	movw	r8, r20
    111c:	04 00       	.word	0x0004	; ????
    111e:	88 01       	movw	r16, r16
    1120:	04 00       	.word	0x0004	; ????
    1122:	ee 01       	movw	r28, r28
    1124:	04 00       	.word	0x0004	; ????
    1126:	ee 01       	movw	r28, r28
    1128:	10 00       	.word	0x0010	; ????
    112a:	9f 01       	movw	r18, r30
    112c:	04 00       	.word	0x0004	; ????
    112e:	b8 01       	movw	r22, r16
    1130:	04 00       	.word	0x0004	; ????
    1132:	e4 02       	muls	r30, r20
    1134:	10 00       	.word	0x0010	; ????
    1136:	4b 02       	muls	r20, r27
    1138:	04 00       	.word	0x0004	; ????
    113a:	72 01       	movw	r14, r4
    113c:	04 00       	.word	0x0004	; ????
    113e:	72 01       	movw	r14, r4
    1140:	08 00       	.word	0x0008	; ????
    1142:	4a 01       	movw	r8, r20
    1144:	04 00       	.word	0x0004	; ????
    1146:	ee 01       	movw	r28, r28
    1148:	08 00       	.word	0x0008	; ????
    114a:	b8 01       	movw	r22, r16
    114c:	04 00       	.word	0x0004	; ????
    114e:	26 01       	movw	r4, r12
    1150:	04 00       	.word	0x0004	; ????
    1152:	00 00       	nop
    1154:	08 00       	.word	0x0008	; ????
    1156:	4b 02       	muls	r20, r27
    1158:	04 00       	.word	0x0004	; ????
    115a:	2a 02       	muls	r18, r26
    115c:	04 00       	.word	0x0004	; ????
    115e:	2a 02       	muls	r18, r26
    1160:	04 00       	.word	0x0004	; ????
    1162:	ee 01       	movw	r28, r28
    1164:	04 00       	.word	0x0004	; ????
    1166:	ee 01       	movw	r28, r28
    1168:	04 00       	.word	0x0004	; ????
    116a:	00 00       	nop
    116c:	04 00       	.word	0x0004	; ????
    116e:	ee 01       	movw	r28, r28
    1170:	04 00       	.word	0x0004	; ????
    1172:	d2 01       	movw	r26, r4
    1174:	04 00       	.word	0x0004	; ????
    1176:	d2 01       	movw	r26, r4
    1178:	04 00       	.word	0x0004	; ????
    117a:	ee 01       	movw	r28, r28
    117c:	04 00       	.word	0x0004	; ????
    117e:	ee 01       	movw	r28, r28
    1180:	04 00       	.word	0x0004	; ????
    1182:	00 00       	nop
    1184:	04 00       	.word	0x0004	; ????
    1186:	4a 01       	movw	r8, r20
    1188:	04 00       	.word	0x0004	; ????
    118a:	4a 01       	movw	r8, r20
    118c:	04 00       	.word	0x0004	; ????
    118e:	72 01       	movw	r14, r4
    1190:	08 00       	.word	0x0008	; ????
    1192:	4a 01       	movw	r8, r20
    1194:	04 00       	.word	0x0004	; ????
    1196:	00 00       	nop
    1198:	04 00       	.word	0x0004	; ????
    119a:	4a 01       	movw	r8, r20
    119c:	04 00       	.word	0x0004	; ????
    119e:	4a 01       	movw	r8, r20
    11a0:	04 00       	.word	0x0004	; ????
    11a2:	ee 01       	movw	r28, r28
    11a4:	08 00       	.word	0x0008	; ????
    11a6:	b8 01       	movw	r22, r16
    11a8:	04 00       	.word	0x0004	; ????
    11aa:	00 00       	nop
    11ac:	04 00       	.word	0x0004	; ????
    11ae:	4b 02       	muls	r20, r27
    11b0:	04 00       	.word	0x0004	; ????
    11b2:	2a 02       	muls	r18, r26
    11b4:	04 00       	.word	0x0004	; ????
    11b6:	2a 02       	muls	r18, r26
    11b8:	04 00       	.word	0x0004	; ????
    11ba:	ee 01       	movw	r28, r28
    11bc:	04 00       	.word	0x0004	; ????
    11be:	ee 01       	movw	r28, r28
    11c0:	04 00       	.word	0x0004	; ????
    11c2:	00 00       	nop
    11c4:	04 00       	.word	0x0004	; ????
    11c6:	ee 01       	movw	r28, r28
    11c8:	04 00       	.word	0x0004	; ????
    11ca:	2a 02       	muls	r18, r26
    11cc:	04 00       	.word	0x0004	; ????
    11ce:	93 02       	muls	r25, r19
    11d0:	04 00       	.word	0x0004	; ????
    11d2:	4b 02       	muls	r20, r27
    11d4:	04 00       	.word	0x0004	; ????
    11d6:	4b 02       	muls	r20, r27
    11d8:	04 00       	.word	0x0004	; ????
    11da:	00 00       	nop
    11dc:	04 00       	.word	0x0004	; ????
    11de:	9f 01       	movw	r18, r30
    11e0:	04 00       	.word	0x0004	; ????
    11e2:	ee 01       	movw	r28, r28
    11e4:	04 00       	.word	0x0004	; ????
    11e6:	ee 01       	movw	r28, r28
    11e8:	08 00       	.word	0x0008	; ????
    11ea:	b8 01       	movw	r22, r16
    11ec:	04 00       	.word	0x0004	; ????
    11ee:	9f 01       	movw	r18, r30
    11f0:	08 00       	.word	0x0008	; ????
    11f2:	72 01       	movw	r14, r4
    11f4:	04 00       	.word	0x0004	; ????
    11f6:	72 01       	movw	r14, r4
    11f8:	04 00       	.word	0x0004	; ????
    11fa:	00 00       	nop
    11fc:	04 00       	.word	0x0004	; ????
    11fe:	4a 01       	movw	r8, r20
    1200:	04 00       	.word	0x0004	; ????
    1202:	b8 01       	movw	r22, r16
    1204:	04 00       	.word	0x0004	; ????
    1206:	4b 02       	muls	r20, r27
    1208:	04 00       	.word	0x0004	; ????
    120a:	2a 02       	muls	r18, r26
    120c:	04 00       	.word	0x0004	; ????
    120e:	2a 02       	muls	r18, r26
    1210:	04 00       	.word	0x0004	; ????
    1212:	ee 01       	movw	r28, r28
    1214:	04 00       	.word	0x0004	; ????
    1216:	ee 01       	movw	r28, r28
    1218:	04 00       	.word	0x0004	; ????
    121a:	00 00       	nop
    121c:	04 00       	.word	0x0004	; ????
    121e:	ee 01       	movw	r28, r28
    1220:	04 00       	.word	0x0004	; ????
    1222:	d2 01       	movw	r26, r4
    1224:	04 00       	.word	0x0004	; ????
    1226:	d2 01       	movw	r26, r4
    1228:	04 00       	.word	0x0004	; ????
    122a:	ee 01       	movw	r28, r28
    122c:	04 00       	.word	0x0004	; ????
    122e:	ee 01       	movw	r28, r28
    1230:	04 00       	.word	0x0004	; ????
    1232:	00 00       	nop
    1234:	04 00       	.word	0x0004	; ????
    1236:	4a 01       	movw	r8, r20
    1238:	04 00       	.word	0x0004	; ????
    123a:	4a 01       	movw	r8, r20
    123c:	04 00       	.word	0x0004	; ????
    123e:	72 01       	movw	r14, r4
    1240:	08 00       	.word	0x0008	; ????
    1242:	4a 01       	movw	r8, r20
    1244:	04 00       	.word	0x0004	; ????
    1246:	00 00       	nop
    1248:	04 00       	.word	0x0004	; ????
    124a:	4a 01       	movw	r8, r20
    124c:	04 00       	.word	0x0004	; ????
    124e:	4a 01       	movw	r8, r20
    1250:	04 00       	.word	0x0004	; ????
    1252:	ee 01       	movw	r28, r28
    1254:	08 00       	.word	0x0008	; ????
    1256:	b8 01       	movw	r22, r16
    1258:	04 00       	.word	0x0004	; ????
    125a:	00 00       	nop
    125c:	04 00       	.word	0x0004	; ????
    125e:	4b 02       	muls	r20, r27
    1260:	04 00       	.word	0x0004	; ????
    1262:	2a 02       	muls	r18, r26
    1264:	04 00       	.word	0x0004	; ????
    1266:	2a 02       	muls	r18, r26
    1268:	04 00       	.word	0x0004	; ????
    126a:	ee 01       	movw	r28, r28
    126c:	04 00       	.word	0x0004	; ????
    126e:	ee 01       	movw	r28, r28
    1270:	04 00       	.word	0x0004	; ????
    1272:	00 00       	nop
    1274:	04 00       	.word	0x0004	; ????
    1276:	ee 01       	movw	r28, r28
    1278:	04 00       	.word	0x0004	; ????
    127a:	2a 02       	muls	r18, r26
    127c:	04 00       	.word	0x0004	; ????
    127e:	93 02       	muls	r25, r19
    1280:	04 00       	.word	0x0004	; ????
    1282:	4b 02       	muls	r20, r27
    1284:	04 00       	.word	0x0004	; ????
    1286:	4b 02       	muls	r20, r27
    1288:	04 00       	.word	0x0004	; ????
    128a:	00 00       	nop
    128c:	04 00       	.word	0x0004	; ????
    128e:	9f 01       	movw	r18, r30
    1290:	04 00       	.word	0x0004	; ????
    1292:	ee 01       	movw	r28, r28
    1294:	04 00       	.word	0x0004	; ????
    1296:	ee 01       	movw	r28, r28
    1298:	08 00       	.word	0x0008	; ????
    129a:	b8 01       	movw	r22, r16
    129c:	04 00       	.word	0x0004	; ????
    129e:	9f 01       	movw	r18, r30
    12a0:	08 00       	.word	0x0008	; ????
    12a2:	72 01       	movw	r14, r4
    12a4:	04 00       	.word	0x0004	; ????
    12a6:	72 01       	movw	r14, r4
    12a8:	04 00       	.word	0x0004	; ????
    12aa:	00 00       	nop
    12ac:	04 00       	.word	0x0004	; ????
    12ae:	4a 01       	movw	r8, r20
    12b0:	04 00       	.word	0x0004	; ????
    12b2:	b8 01       	movw	r22, r16
    12b4:	04 00       	.word	0x0004	; ????
    12b6:	00 00       	nop
    12b8:	04 00       	.word	0x0004	; ????
    12ba:	00 00       	nop
    12bc:	04 00       	.word	0x0004	; ????
	...

00001328 <__ctors_end>:
    1328:	11 24       	eor	r1, r1
    132a:	1f be       	out	0x3f, r1	; 63
    132c:	cf ef       	ldi	r28, 0xFF	; 255
    132e:	d8 e0       	ldi	r29, 0x08	; 8
    1330:	de bf       	out	0x3e, r29	; 62
    1332:	cd bf       	out	0x3d, r28	; 61

00001334 <__do_clear_bss>:
    1334:	21 e0       	ldi	r18, 0x01	; 1
    1336:	a0 e0       	ldi	r26, 0x00	; 0
    1338:	b1 e0       	ldi	r27, 0x01	; 1
    133a:	01 c0       	rjmp	.+2      	; 0x133e <.do_clear_bss_start>

0000133c <.do_clear_bss_loop>:
    133c:	1d 92       	st	X+, r1

0000133e <.do_clear_bss_start>:
    133e:	a5 30       	cpi	r26, 0x05	; 5
    1340:	b2 07       	cpc	r27, r18
    1342:	e1 f7       	brne	.-8      	; 0x133c <.do_clear_bss_loop>
    1344:	bb d0       	rcall	.+374    	; 0x14bc <main>
    1346:	31 c2       	rjmp	.+1122   	; 0x17aa <_exit>

00001348 <__bad_interrupt>:
    1348:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000134c <setDebuggingOutput>:
	/* we can not handle frequencies below 120Hz*/
	if (frequency < 120){
		frequency = 120;
	}
	return(F_CPU / 2 / frequency);
}
    134c:	25 9a       	sbi	0x04, 5	; 4
    134e:	08 95       	ret

00001350 <setDebuggingLed>:
    1350:	2d 9a       	sbi	0x05, 5	; 5
    1352:	08 95       	ret

00001354 <clearDebuggingLed>:
    1354:	2d 98       	cbi	0x05, 5	; 5
    1356:	08 95       	ret

00001358 <calcOCVal>:



uint16_t calcTOP(uint16_t frequency){
	/* we can not handle frequencies below 120Hz*/
	if (frequency < 120){
    1358:	88 37       	cpi	r24, 0x78	; 120
    135a:	91 05       	cpc	r25, r1
    135c:	10 f4       	brcc	.+4      	; 0x1362 <calcOCVal+0xa>
		frequency = 120;
    135e:	88 e7       	ldi	r24, 0x78	; 120
    1360:	90 e0       	ldi	r25, 0x00	; 0
	}
	return(F_CPU / 2 / frequency);
}

uint16_t calcOCVal(uint16_t frequency){
	return( calcTOP(frequency)/100*PWMDUTYCYCLE );
    1362:	9c 01       	movw	r18, r24
    1364:	40 e0       	ldi	r20, 0x00	; 0
    1366:	50 e0       	ldi	r21, 0x00	; 0
    1368:	60 e0       	ldi	r22, 0x00	; 0
    136a:	72 e1       	ldi	r23, 0x12	; 18
    136c:	8a e7       	ldi	r24, 0x7A	; 122
    136e:	90 e0       	ldi	r25, 0x00	; 0
    1370:	eb d1       	rcall	.+982    	; 0x1748 <__udivmodsi4>
    1372:	36 95       	lsr	r19
    1374:	27 95       	ror	r18
    1376:	36 95       	lsr	r19
    1378:	27 95       	ror	r18
    137a:	ab e7       	ldi	r26, 0x7B	; 123
    137c:	b4 e1       	ldi	r27, 0x14	; 20
    137e:	06 d2       	rcall	.+1036   	; 0x178c <__umulhisi3>
    1380:	96 95       	lsr	r25
    1382:	87 95       	ror	r24
    1384:	9c 01       	movw	r18, r24
    1386:	22 0f       	add	r18, r18
    1388:	33 1f       	adc	r19, r19
    138a:	22 0f       	add	r18, r18
    138c:	33 1f       	adc	r19, r19
}
    138e:	82 0f       	add	r24, r18
    1390:	93 1f       	adc	r25, r19
    1392:	08 95       	ret

00001394 <setPWM>:

void setPWM(uint16_t frequency){
    1394:	cf 93       	push	r28
    1396:	df 93       	push	r29
	
	/* we can not handle frequencies below 120Hz*/
	if (frequency < 120){
    1398:	88 37       	cpi	r24, 0x78	; 120
    139a:	91 05       	cpc	r25, r1
    139c:	30 f4       	brcc	.+12     	; 0x13aa <setPWM+0x16>
		
		//disable pwm output
		TCCR1A &= ~( 1<<COM1A1 | 1<<COM1A0);
    139e:	e0 e8       	ldi	r30, 0x80	; 128
    13a0:	f0 e0       	ldi	r31, 0x00	; 0
    13a2:	80 81       	ld	r24, Z
    13a4:	8f 73       	andi	r24, 0x3F	; 63
    13a6:	80 83       	st	Z, r24
    13a8:	17 c0       	rjmp	.+46     	; 0x13d8 <setPWM+0x44>
    13aa:	ec 01       	movw	r28, r24
		
	} else {
		
		OCR1A = calcOCVal(frequency);
    13ac:	d5 df       	rcall	.-86     	; 0x1358 <calcOCVal>
    13ae:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
    13b2:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
uint16_t calcTOP(uint16_t frequency){
	/* we can not handle frequencies below 120Hz*/
	if (frequency < 120){
		frequency = 120;
	}
	return(F_CPU / 2 / frequency);
    13b6:	9e 01       	movw	r18, r28
    13b8:	40 e0       	ldi	r20, 0x00	; 0
    13ba:	50 e0       	ldi	r21, 0x00	; 0
    13bc:	60 e0       	ldi	r22, 0x00	; 0
    13be:	72 e1       	ldi	r23, 0x12	; 18
    13c0:	8a e7       	ldi	r24, 0x7A	; 122
    13c2:	90 e0       	ldi	r25, 0x00	; 0
    13c4:	c1 d1       	rcall	.+898    	; 0x1748 <__udivmodsi4>
		TCCR1A &= ~( 1<<COM1A1 | 1<<COM1A0);
		
	} else {
		
		OCR1A = calcOCVal(frequency);
		ICR1 = calcTOP(frequency);
    13c6:	30 93 87 00 	sts	0x0087, r19	; 0x800087 <__TEXT_REGION_LENGTH__+0x7e0087>
    13ca:	20 93 86 00 	sts	0x0086, r18	; 0x800086 <__TEXT_REGION_LENGTH__+0x7e0086>
		
		TCCR1A |=  1<<COM1A1 ;
    13ce:	e0 e8       	ldi	r30, 0x80	; 128
    13d0:	f0 e0       	ldi	r31, 0x00	; 0
    13d2:	80 81       	ld	r24, Z
    13d4:	80 68       	ori	r24, 0x80	; 128
    13d6:	80 83       	st	Z, r24
		
	}
}
    13d8:	df 91       	pop	r29
    13da:	cf 91       	pop	r28
    13dc:	08 95       	ret

000013de <initTimer0>:
}


void initTimer0(void){
	/* set up time progressing timer (1ms interrupt frequency) */
	TCCR0A  = 0x02; //CTC Mode
    13de:	82 e0       	ldi	r24, 0x02	; 2
    13e0:	84 bd       	out	0x24, r24	; 36
	OCR0A   = F_CPU/64/1000-1; //top for CTC mode
    13e2:	89 ef       	ldi	r24, 0xF9	; 249
    13e4:	87 bd       	out	0x27, r24	; 39
	TIMSK0 |= (1<<OCIE0A);
    13e6:	ee e6       	ldi	r30, 0x6E	; 110
    13e8:	f0 e0       	ldi	r31, 0x00	; 0
    13ea:	80 81       	ld	r24, Z
    13ec:	82 60       	ori	r24, 0x02	; 2
    13ee:	80 83       	st	Z, r24
	TCCR0B  = 0x03; //run with PS=64
    13f0:	83 e0       	ldi	r24, 0x03	; 3
    13f2:	85 bd       	out	0x25, r24	; 37
    13f4:	08 95       	ret

000013f6 <initTimer1>:
}

void initTimer1(void){
    13f6:	cf 93       	push	r28
    13f8:	df 93       	push	r29
	/* set up pwm pin */
	DDRB |= (1<<PB1);
    13fa:	21 9a       	sbi	0x04, 1	; 4
	/* set up the hardware pwm timer */
	TCCR1A=0x80;
    13fc:	80 e8       	ldi	r24, 0x80	; 128
    13fe:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
	TCCR1B=0x10;
    1402:	c1 e8       	ldi	r28, 0x81	; 129
    1404:	d0 e0       	ldi	r29, 0x00	; 0
    1406:	80 e1       	ldi	r24, 0x10	; 16
    1408:	88 83       	st	Y, r24
	/*turn off pwm*/
	setPWM(0);
    140a:	80 e0       	ldi	r24, 0x00	; 0
    140c:	90 e0       	ldi	r25, 0x00	; 0
    140e:	c2 df       	rcall	.-124    	; 0x1394 <setPWM>
	/* start the timer. no ps */
	TCCR1B=0x11;
    1410:	81 e1       	ldi	r24, 0x11	; 17
    1412:	88 83       	st	Y, r24
}
    1414:	df 91       	pop	r29
    1416:	cf 91       	pop	r28
    1418:	08 95       	ret

0000141a <initButtons>:


void initButtons(void){
	/* set PortD3 + PortD4 as input with Pullup */
	PORTD |= (1<<PD3);
    141a:	5b 9a       	sbi	0x0b, 3	; 11
	DDRD &= ~(1<<PD3);
    141c:	53 98       	cbi	0x0a, 3	; 10
	PORTD |= (1<<PD4);
    141e:	5c 9a       	sbi	0x0b, 4	; 11
	DDRD &= ~(1<<PD4);
    1420:	54 98       	cbi	0x0a, 4	; 10
    1422:	08 95       	ret

00001424 <initDebugging>:
}

void initDebugging(void){
	clearDebuggingLed();
    1424:	97 df       	rcall	.-210    	; 0x1354 <clearDebuggingLed>
	setDebuggingOutput();
    1426:	92 cf       	rjmp	.-220    	; 0x134c <setDebuggingOutput>
    1428:	08 95       	ret

0000142a <__vector_14>:
    142a:	1f 92       	push	r1

uint16_t isrcount=0;

/* Blocking timer interrupt progressing the time */
/* is called every millisecond */
ISR(TIMER0_COMPA_vect, ISR_BLOCK){
    142c:	0f 92       	push	r0
    142e:	0f b6       	in	r0, 0x3f	; 63
    1430:	0f 92       	push	r0
    1432:	11 24       	eor	r1, r1
    1434:	2f 93       	push	r18
    1436:	3f 93       	push	r19
    1438:	4f 93       	push	r20
    143a:	5f 93       	push	r21
    143c:	6f 93       	push	r22
    143e:	7f 93       	push	r23
    1440:	8f 93       	push	r24
    1442:	9f 93       	push	r25
    1444:	af 93       	push	r26
    1446:	bf 93       	push	r27
    1448:	ef 93       	push	r30
    144a:	ff 93       	push	r31
	/* check if we have something to do */
	if(remainingDuration > 0){
    144c:	80 91 03 01 	lds	r24, 0x0103	; 0x800103 <remainingDuration>
    1450:	90 91 04 01 	lds	r25, 0x0104	; 0x800104 <remainingDuration+0x1>
    1454:	89 2b       	or	r24, r25
    1456:	b1 f0       	breq	.+44     	; 0x1484 <__vector_14+0x5a>
		/* handle internote gap if needed */
		if(remainingDuration == currentInterNoteGap){
    1458:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <currentInterNoteGap>
    145c:	20 91 03 01 	lds	r18, 0x0103	; 0x800103 <remainingDuration>
    1460:	30 91 04 01 	lds	r19, 0x0104	; 0x800104 <remainingDuration+0x1>
    1464:	90 e0       	ldi	r25, 0x00	; 0
    1466:	82 17       	cp	r24, r18
    1468:	93 07       	cpc	r25, r19
    146a:	19 f4       	brne	.+6      	; 0x1472 <__vector_14+0x48>
			/* keep silent during gap*/
			setPWM( 0 );
    146c:	80 e0       	ldi	r24, 0x00	; 0
    146e:	90 e0       	ldi	r25, 0x00	; 0
    1470:	91 df       	rcall	.-222    	; 0x1394 <setPWM>
		}
		/* progress time */
		--remainingDuration;
    1472:	80 91 03 01 	lds	r24, 0x0103	; 0x800103 <remainingDuration>
    1476:	90 91 04 01 	lds	r25, 0x0104	; 0x800104 <remainingDuration+0x1>
    147a:	01 97       	sbiw	r24, 0x01	; 1
    147c:	90 93 04 01 	sts	0x0104, r25	; 0x800104 <remainingDuration+0x1>
    1480:	80 93 03 01 	sts	0x0103, r24	; 0x800103 <remainingDuration>
	}
}
    1484:	ff 91       	pop	r31
    1486:	ef 91       	pop	r30
    1488:	bf 91       	pop	r27
    148a:	af 91       	pop	r26
    148c:	9f 91       	pop	r25
    148e:	8f 91       	pop	r24
    1490:	7f 91       	pop	r23
    1492:	6f 91       	pop	r22
    1494:	5f 91       	pop	r21
    1496:	4f 91       	pop	r20
    1498:	3f 91       	pop	r19
    149a:	2f 91       	pop	r18
    149c:	0f 90       	pop	r0
    149e:	0f be       	out	0x3f, r0	; 63
    14a0:	0f 90       	pop	r0
    14a2:	1f 90       	pop	r1
    14a4:	18 95       	reti

000014a6 <playToneBackend>:

/* starts playback of a tone with given frequency, duration, and following inter-note-gap  */
void playToneBackend(uint16_t duration_ms, uint16_t frequency_hz, uint8_t internotegap_ms){
	/* set up tone */
	remainingDuration = duration_ms + internotegap_ms;
    14a6:	84 0f       	add	r24, r20
    14a8:	91 1d       	adc	r25, r1
    14aa:	90 93 04 01 	sts	0x0104, r25	; 0x800104 <remainingDuration+0x1>
    14ae:	80 93 03 01 	sts	0x0103, r24	; 0x800103 <remainingDuration>
	currentInterNoteGap = internotegap_ms;
    14b2:	40 93 02 01 	sts	0x0102, r20	; 0x800102 <currentInterNoteGap>
	setPWM( frequency_hz );
    14b6:	cb 01       	movw	r24, r22
    14b8:	6d cf       	rjmp	.-294    	; 0x1394 <setPWM>
    14ba:	08 95       	ret

000014bc <main>:
	uint8_t stateSong=SONG_A;
	uint16_t debounceBtnOnOff=0;
	uint16_t debounceBtnSong=0;
	
	/* do initializations */
	initButtons();
    14bc:	ae df       	rcall	.-164    	; 0x141a <initButtons>
	initTimer0();
    14be:	8f df       	rcall	.-226    	; 0x13de <initTimer0>
	initTimer1();
    14c0:	9a df       	rcall	.-204    	; 0x13f6 <initTimer1>
    14c2:	b0 df       	rcall	.-160    	; 0x1424 <initDebugging>
	
	#if DEBUGGING == TRUE
	initDebugging();
    14c4:	78 94       	sei
    14c6:	83 b7       	in	r24, 0x33	; 51
	#endif
	
	/*  enable interrupts */
	sei();
    14c8:	81 7f       	andi	r24, 0xF1	; 241
	
	set_sleep_mode(SLEEP_MODE_IDLE);
    14ca:	83 bf       	out	0x33, r24	; 51
    14cc:	83 b7       	in	r24, 0x33	; 51
    14ce:	81 60       	ori	r24, 0x01	; 1
	sleep_enable();
    14d0:	83 bf       	out	0x33, r24	; 51
    14d2:	e1 2c       	mov	r14, r1
    14d4:	f1 2c       	mov	r15, r1
	uint16_t currentDuration = 0;
	
	uint8_t state=STOP;
	uint8_t stateSong=SONG_A;
	uint16_t debounceBtnOnOff=0;
	uint16_t debounceBtnSong=0;
    14d6:	c0 e0       	ldi	r28, 0x00	; 0
    14d8:	d0 e0       	ldi	r29, 0x00	; 0
	uint16_t currentFrequency = 0;
	uint16_t currentDuration = 0;
	
	uint8_t state=STOP;
	uint8_t stateSong=SONG_A;
	uint16_t debounceBtnOnOff=0;
    14da:	00 e0       	ldi	r16, 0x00	; 0
    14dc:	10 e0       	ldi	r17, 0x00	; 0
	uint16_t songSize = 0;
	uint16_t currentFrequency = 0;
	uint16_t currentDuration = 0;
	
	uint8_t state=STOP;
	uint8_t stateSong=SONG_A;
    14de:	c1 2c       	mov	r12, r1

	uint16_t songSize = 0;
	uint16_t currentFrequency = 0;
	uint16_t currentDuration = 0;
	
	uint8_t state=STOP;
    14e0:	d1 2c       	mov	r13, r1

int main(void){

	uint16_t songSize = 0;
	uint16_t currentFrequency = 0;
	uint16_t currentDuration = 0;
    14e2:	61 2c       	mov	r6, r1
    14e4:	71 2c       	mov	r7, r1
uint16_t musicPosition=0;

int main(void){

	uint16_t songSize = 0;
	uint16_t currentFrequency = 0;
    14e6:	a1 2c       	mov	r10, r1
    14e8:	b1 2c       	mov	r11, r1

uint16_t musicPosition=0;

int main(void){

	uint16_t songSize = 0;
    14ea:	91 2c       	mov	r9, r1
    14ec:	88 24       	eor	r8, r8
						songSize = music[SONG_E][0];
						break;
					case SONG_F:
						currentFrequency = pgm_read_word(&music[SONG_F][2*musicPosition+1]);
						currentDuration =  pgm_read_word(&music[SONG_F][2*musicPosition+2]);
						songSize = music[SONG_F][0];
    14ee:	83 94       	inc	r8
    14f0:	0f 2e       	mov	r0, r31
    14f2:	fe e4       	ldi	r31, 0x4E	; 78
					/* we have finished the track - stop */
					state = STOP;
					setPWM(0);
				} else {
					/* play tone */
					playToneBackend(note2duration(currentDuration), currentFrequency, INTERNOTEGAP);
    14f4:	5f 2e       	mov	r5, r31
    14f6:	f0 2d       	mov	r31, r0
    14f8:	21 2c       	mov	r2, r1
    14fa:	31 2c       	mov	r3, r1
						songSize = music[SONG_D][0];
						break;
					case SONG_E:
						currentFrequency = pgm_read_word(&music[SONG_E][2*musicPosition+1]);
						currentDuration =  pgm_read_word(&music[SONG_E][2*musicPosition+2]);
						songSize = music[SONG_E][0];
    14fc:	41 2c       	mov	r4, r1
						songSize = music[SONG_C][0];
						break;
					case SONG_D:
						currentFrequency = pgm_read_word(&music[SONG_D][2*musicPosition+1]);
						currentDuration =  pgm_read_word(&music[SONG_D][2*musicPosition+2]);
						songSize = music[SONG_D][0];
    14fe:	4b 99       	sbic	0x09, 3	; 9
						songSize = music[SONG_E][0];
						break;
					case SONG_F:
						currentFrequency = pgm_read_word(&music[SONG_F][2*musicPosition+1]);
						currentDuration =  pgm_read_word(&music[SONG_F][2*musicPosition+2]);
						songSize = music[SONG_F][0];
    1500:	02 c0       	rjmp	.+4      	; 0x1506 <main+0x4a>
	sleep_enable();

	/* main work loop */
	while(TRUE){
		/* check if state change is needed (pressed button)*/		
		if ((PIND & (1<<PD3)) == 0){
    1502:	21 96       	adiw	r28, 0x01	; 1
    1504:	02 c0       	rjmp	.+4      	; 0x150a <main+0x4e>
			debounceBtnOnOff++;
    1506:	c0 e0       	ldi	r28, 0x00	; 0
    1508:	d0 e0       	ldi	r29, 0x00	; 0
			} else {
			debounceBtnOnOff = 0;
    150a:	4c 99       	sbic	0x09, 4	; 9
    150c:	04 c0       	rjmp	.+8      	; 0x1516 <main+0x5a>
		}
		if ((PIND & (1<<PD4)) == 0){
    150e:	8f ef       	ldi	r24, 0xFF	; 255
    1510:	e8 1a       	sub	r14, r24
			debounceBtnSong++;
    1512:	f8 0a       	sbc	r15, r24
    1514:	02 c0       	rjmp	.+4      	; 0x151a <main+0x5e>
    1516:	e1 2c       	mov	r14, r1
    1518:	f1 2c       	mov	r15, r1
			} else {
			debounceBtnSong = 0;
    151a:	11 11       	cpse	r17, r1
    151c:	0c c0       	rjmp	.+24     	; 0x1536 <main+0x7a>
		}
		
		if (state == STOP){
    151e:	c4 3f       	cpi	r28, 0xF4	; 244
    1520:	81 e0       	ldi	r24, 0x01	; 1
			if (debounceBtnOnOff == DEBOUNCELIMIT){
    1522:	d8 07       	cpc	r29, r24
    1524:	09 f0       	breq	.+2      	; 0x1528 <main+0x6c>
    1526:	0e c1       	rjmp	.+540    	; 0x1744 <main+0x288>
    1528:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <_edata+0x1>
				state = PLAY;
				debounceBtnOnOff = 0;
				musicPosition = 0;
    152c:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <_edata>
    1530:	c0 e0       	ldi	r28, 0x00	; 0
    1532:	d0 e0       	ldi	r29, 0x00	; 0
		}
		
		if (state == STOP){
			if (debounceBtnOnOff == DEBOUNCELIMIT){
				state = PLAY;
				debounceBtnOnOff = 0;
    1534:	1a c0       	rjmp	.+52     	; 0x156a <main+0xae>
    1536:	c8 3e       	cpi	r28, 0xE8	; 232
    1538:	83 e0       	ldi	r24, 0x03	; 3
				musicPosition = 0;
			}
		} else {	// state == PLAY
			if (debounceBtnOnOff >= 2*DEBOUNCELIMIT) {
    153a:	d8 07       	cpc	r29, r24
    153c:	08 f0       	brcs	.+2      	; 0x1540 <main+0x84>
    153e:	fe c0       	rjmp	.+508    	; 0x173c <main+0x280>
    1540:	84 ef       	ldi	r24, 0xF4	; 244
    1542:	e8 16       	cp	r14, r24
				state = STOP;
				debounceBtnOnOff = 0;
				debounceBtnSong = 0;
			}
			else if (debounceBtnSong >= DEBOUNCELIMIT) {
    1544:	81 e0       	ldi	r24, 0x01	; 1
    1546:	f8 06       	cpc	r15, r24
    1548:	68 f0       	brcs	.+26     	; 0x1564 <main+0xa8>
    154a:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <_edata+0x1>
				musicPosition = 0;
    154e:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <_edata>
    1552:	0f 5f       	subi	r16, 0xFF	; 255
    1554:	06 30       	cpi	r16, 0x06	; 6
				debounceBtnSong = 0;
				stateSong += 1;
    1556:	21 f4       	brne	.+8      	; 0x1560 <main+0xa4>
				if (stateSong==SONGS) {
    1558:	e1 2c       	mov	r14, r1
    155a:	f1 2c       	mov	r15, r1
				debounceBtnOnOff = 0;
				debounceBtnSong = 0;
			}
			else if (debounceBtnSong >= DEBOUNCELIMIT) {
				musicPosition = 0;
				debounceBtnSong = 0;
    155c:	00 e0       	ldi	r16, 0x00	; 0
    155e:	02 c0       	rjmp	.+4      	; 0x1564 <main+0xa8>
				stateSong += 1;
				if (stateSong==SONGS) {
					stateSong = 0;
    1560:	e1 2c       	mov	r14, r1
    1562:	f1 2c       	mov	r15, r1
				debounceBtnOnOff = 0;
				debounceBtnSong = 0;
			}
			else if (debounceBtnSong >= DEBOUNCELIMIT) {
				musicPosition = 0;
				debounceBtnSong = 0;
    1564:	11 30       	cpi	r17, 0x01	; 1
					stateSong = 0;
				}
			}
		}
		
		if (state == PLAY){
    1566:	09 f0       	breq	.+2      	; 0x156a <main+0xae>
    1568:	e1 c0       	rjmp	.+450    	; 0x172c <main+0x270>
    156a:	f2 de       	rcall	.-540    	; 0x1350 <setDebuggingLed>
			setDebuggingLed();
    156c:	80 91 03 01 	lds	r24, 0x0103	; 0x800103 <remainingDuration>
			/* if next note should be played */
			if(remainingDuration == 0){
    1570:	90 91 04 01 	lds	r25, 0x0104	; 0x800104 <remainingDuration+0x1>
    1574:	89 2b       	or	r24, r25
    1576:	09 f0       	breq	.+2      	; 0x157a <main+0xbe>
    1578:	de c0       	rjmp	.+444    	; 0x1736 <main+0x27a>
    157a:	02 30       	cpi	r16, 0x02	; 2
    157c:	09 f4       	brne	.+2      	; 0x1580 <main+0xc4>
				
				/* fetch music date */
				switch (stateSong)
    157e:	47 c0       	rjmp	.+142    	; 0x160e <main+0x152>
    1580:	28 f4       	brcc	.+10     	; 0x158c <main+0xd0>
    1582:	00 23       	and	r16, r16
    1584:	61 f0       	breq	.+24     	; 0x159e <main+0xe2>
    1586:	01 30       	cpi	r16, 0x01	; 1
    1588:	31 f1       	breq	.+76     	; 0x15d6 <main+0x11a>
    158a:	b0 c0       	rjmp	.+352    	; 0x16ec <main+0x230>
    158c:	04 30       	cpi	r16, 0x04	; 4
    158e:	09 f4       	brne	.+2      	; 0x1592 <main+0xd6>
    1590:	76 c0       	rjmp	.+236    	; 0x167e <main+0x1c2>
    1592:	08 f4       	brcc	.+2      	; 0x1596 <main+0xda>
    1594:	58 c0       	rjmp	.+176    	; 0x1646 <main+0x18a>
    1596:	05 30       	cpi	r16, 0x05	; 5
    1598:	09 f4       	brne	.+2      	; 0x159c <main+0xe0>
    159a:	8d c0       	rjmp	.+282    	; 0x16b6 <main+0x1fa>
    159c:	a7 c0       	rjmp	.+334    	; 0x16ec <main+0x230>
    159e:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
				{
					case SONG_A:
						currentFrequency = pgm_read_word(&music[SONG_A][2*musicPosition+1]);
    15a2:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <_edata+0x1>
    15a6:	88 0f       	add	r24, r24
    15a8:	99 1f       	adc	r25, r25
    15aa:	fc 01       	movw	r30, r24
    15ac:	ee 0f       	add	r30, r30
    15ae:	ff 1f       	adc	r31, r31
    15b0:	e6 59       	subi	r30, 0x96	; 150
    15b2:	ff 4f       	sbci	r31, 0xFF	; 255
    15b4:	25 91       	lpm	r18, Z+
    15b6:	34 91       	lpm	r19, Z
    15b8:	62 2e       	mov	r6, r18
    15ba:	73 2e       	mov	r7, r19
    15bc:	fc 01       	movw	r30, r24
    15be:	ee 0f       	add	r30, r30
						currentDuration =  pgm_read_word(&music[SONG_A][2*musicPosition+2]);
    15c0:	ff 1f       	adc	r31, r31
    15c2:	e4 59       	subi	r30, 0x94	; 148
    15c4:	ff 4f       	sbci	r31, 0xFF	; 255
    15c6:	c5 90       	lpm	r12, Z+
    15c8:	d4 90       	lpm	r13, Z
    15ca:	0f 2e       	mov	r0, r31
    15cc:	f4 e3       	ldi	r31, 0x34	; 52
						songSize = music[SONG_A][0];
    15ce:	af 2e       	mov	r10, r31
    15d0:	b1 2c       	mov	r11, r1
    15d2:	f0 2d       	mov	r31, r0
    15d4:	8b c0       	rjmp	.+278    	; 0x16ec <main+0x230>
    15d6:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
						break;
					case SONG_B:
						currentFrequency = pgm_read_word(&music[SONG_B][2*musicPosition+1]);
    15da:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <_edata+0x1>
    15de:	88 0f       	add	r24, r24
    15e0:	99 1f       	adc	r25, r25
    15e2:	fc 01       	movw	r30, r24
    15e4:	ee 0f       	add	r30, r30
    15e6:	ff 1f       	adc	r31, r31
    15e8:	e6 57       	subi	r30, 0x76	; 118
    15ea:	fc 4f       	sbci	r31, 0xFC	; 252
    15ec:	25 91       	lpm	r18, Z+
    15ee:	34 91       	lpm	r19, Z
    15f0:	62 2e       	mov	r6, r18
    15f2:	73 2e       	mov	r7, r19
    15f4:	fc 01       	movw	r30, r24
    15f6:	ee 0f       	add	r30, r30
						currentDuration =  pgm_read_word(&music[SONG_B][2*musicPosition+2]);
    15f8:	ff 1f       	adc	r31, r31
    15fa:	e4 57       	subi	r30, 0x74	; 116
    15fc:	fc 4f       	sbci	r31, 0xFC	; 252
    15fe:	c5 90       	lpm	r12, Z+
    1600:	d4 90       	lpm	r13, Z
    1602:	0f 2e       	mov	r0, r31
    1604:	f9 e4       	ldi	r31, 0x49	; 73
						songSize = music[SONG_B][0];
    1606:	af 2e       	mov	r10, r31
    1608:	b1 2c       	mov	r11, r1
    160a:	f0 2d       	mov	r31, r0
    160c:	6f c0       	rjmp	.+222    	; 0x16ec <main+0x230>
    160e:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
						break;
					case SONG_C:
						currentFrequency = pgm_read_word(&music[SONG_C][2*musicPosition+1]);
    1612:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <_edata+0x1>
    1616:	88 0f       	add	r24, r24
    1618:	99 1f       	adc	r25, r25
    161a:	fc 01       	movw	r30, r24
    161c:	ee 0f       	add	r30, r30
    161e:	ff 1f       	adc	r31, r31
    1620:	e6 55       	subi	r30, 0x56	; 86
    1622:	f9 4f       	sbci	r31, 0xF9	; 249
    1624:	25 91       	lpm	r18, Z+
    1626:	34 91       	lpm	r19, Z
    1628:	62 2e       	mov	r6, r18
    162a:	73 2e       	mov	r7, r19
    162c:	fc 01       	movw	r30, r24
    162e:	ee 0f       	add	r30, r30
						currentDuration =  pgm_read_word(&music[SONG_C][2*musicPosition+2]);
    1630:	ff 1f       	adc	r31, r31
    1632:	e4 55       	subi	r30, 0x54	; 84
    1634:	f9 4f       	sbci	r31, 0xF9	; 249
    1636:	c5 90       	lpm	r12, Z+
    1638:	d4 90       	lpm	r13, Z
    163a:	0f 2e       	mov	r0, r31
    163c:	fc e3       	ldi	r31, 0x3C	; 60
						songSize = music[SONG_C][0];
    163e:	af 2e       	mov	r10, r31
    1640:	b1 2c       	mov	r11, r1
    1642:	f0 2d       	mov	r31, r0
    1644:	53 c0       	rjmp	.+166    	; 0x16ec <main+0x230>
    1646:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
						break;
					case SONG_D:
						currentFrequency = pgm_read_word(&music[SONG_D][2*musicPosition+1]);
    164a:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <_edata+0x1>
    164e:	88 0f       	add	r24, r24
    1650:	99 1f       	adc	r25, r25
    1652:	fc 01       	movw	r30, r24
    1654:	ee 0f       	add	r30, r30
    1656:	ff 1f       	adc	r31, r31
    1658:	e6 53       	subi	r30, 0x36	; 54
    165a:	f6 4f       	sbci	r31, 0xF6	; 246
    165c:	25 91       	lpm	r18, Z+
    165e:	34 91       	lpm	r19, Z
    1660:	62 2e       	mov	r6, r18
    1662:	73 2e       	mov	r7, r19
    1664:	fc 01       	movw	r30, r24
    1666:	ee 0f       	add	r30, r30
						currentDuration =  pgm_read_word(&music[SONG_D][2*musicPosition+2]);
    1668:	ff 1f       	adc	r31, r31
    166a:	e4 53       	subi	r30, 0x34	; 52
    166c:	f6 4f       	sbci	r31, 0xF6	; 246
    166e:	c5 90       	lpm	r12, Z+
    1670:	d4 90       	lpm	r13, Z
    1672:	0f 2e       	mov	r0, r31
    1674:	f2 e7       	ldi	r31, 0x72	; 114
						songSize = music[SONG_D][0];
    1676:	af 2e       	mov	r10, r31
    1678:	f0 2d       	mov	r31, r0
    167a:	b3 2c       	mov	r11, r3
    167c:	37 c0       	rjmp	.+110    	; 0x16ec <main+0x230>
    167e:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
						break;
					case SONG_E:
						currentFrequency = pgm_read_word(&music[SONG_E][2*musicPosition+1]);
    1682:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <_edata+0x1>
    1686:	88 0f       	add	r24, r24
    1688:	99 1f       	adc	r25, r25
    168a:	fc 01       	movw	r30, r24
    168c:	ee 0f       	add	r30, r30
    168e:	ff 1f       	adc	r31, r31
    1690:	e6 51       	subi	r30, 0x16	; 22
    1692:	f3 4f       	sbci	r31, 0xF3	; 243
    1694:	25 91       	lpm	r18, Z+
    1696:	34 91       	lpm	r19, Z
    1698:	62 2e       	mov	r6, r18
    169a:	73 2e       	mov	r7, r19
    169c:	fc 01       	movw	r30, r24
    169e:	ee 0f       	add	r30, r30
						currentDuration =  pgm_read_word(&music[SONG_E][2*musicPosition+2]);
    16a0:	ff 1f       	adc	r31, r31
    16a2:	e4 51       	subi	r30, 0x14	; 20
    16a4:	f3 4f       	sbci	r31, 0xF3	; 243
    16a6:	c5 90       	lpm	r12, Z+
    16a8:	d4 90       	lpm	r13, Z
    16aa:	0f 2e       	mov	r0, r31
    16ac:	fa e8       	ldi	r31, 0x8A	; 138
						songSize = music[SONG_E][0];
    16ae:	af 2e       	mov	r10, r31
    16b0:	f0 2d       	mov	r31, r0
    16b2:	b2 2c       	mov	r11, r2
    16b4:	1b c0       	rjmp	.+54     	; 0x16ec <main+0x230>
    16b6:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
						break;
					case SONG_F:
						currentFrequency = pgm_read_word(&music[SONG_F][2*musicPosition+1]);
    16ba:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <_edata+0x1>
    16be:	88 0f       	add	r24, r24
    16c0:	99 1f       	adc	r25, r25
    16c2:	fc 01       	movw	r30, r24
    16c4:	ee 0f       	add	r30, r30
    16c6:	ff 1f       	adc	r31, r31
    16c8:	e6 5f       	subi	r30, 0xF6	; 246
    16ca:	ff 4e       	sbci	r31, 0xEF	; 239
    16cc:	25 91       	lpm	r18, Z+
    16ce:	34 91       	lpm	r19, Z
    16d0:	62 2e       	mov	r6, r18
    16d2:	73 2e       	mov	r7, r19
    16d4:	fc 01       	movw	r30, r24
    16d6:	ee 0f       	add	r30, r30
						currentDuration =  pgm_read_word(&music[SONG_F][2*musicPosition+2]);
    16d8:	ff 1f       	adc	r31, r31
    16da:	e4 5f       	subi	r30, 0xF4	; 244
    16dc:	ff 4e       	sbci	r31, 0xEF	; 239
    16de:	c5 90       	lpm	r12, Z+
    16e0:	d4 90       	lpm	r13, Z
    16e2:	0f 2e       	mov	r0, r31
    16e4:	fd ea       	ldi	r31, 0xAD	; 173
						songSize = music[SONG_F][0];
    16e6:	af 2e       	mov	r10, r31
    16e8:	f0 2d       	mov	r31, r0
    16ea:	b4 2c       	mov	r11, r4
    16ec:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
						break;
				}
				
				
				/* if there are more notes to play */
				if(musicPosition >= songSize){ //music[stateSong][0]){
    16f0:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <_edata+0x1>
    16f4:	8a 15       	cp	r24, r10
    16f6:	9b 05       	cpc	r25, r11
    16f8:	28 f0       	brcs	.+10     	; 0x1704 <main+0x248>
    16fa:	80 e0       	ldi	r24, 0x00	; 0
					/* we have finished the track - stop */
					state = STOP;
					setPWM(0);
    16fc:	90 e0       	ldi	r25, 0x00	; 0
    16fe:	4a de       	rcall	.-876    	; 0x1394 <setPWM>
    1700:	19 2d       	mov	r17, r9
    1702:	1a c0       	rjmp	.+52     	; 0x1738 <main+0x27c>
				
				
				/* if there are more notes to play */
				if(musicPosition >= songSize){ //music[stateSong][0]){
					/* we have finished the track - stop */
					state = STOP;
    1704:	4e e1       	ldi	r20, 0x1E	; 30
    1706:	66 2d       	mov	r22, r6
					setPWM(0);
				} else {
					/* play tone */
					playToneBackend(note2duration(currentDuration), currentFrequency, INTERNOTEGAP);
    1708:	77 2d       	mov	r23, r7
    170a:	5c 9c       	mul	r5, r12
    170c:	c0 01       	movw	r24, r0
    170e:	5d 9c       	mul	r5, r13
    1710:	90 0d       	add	r25, r0
    1712:	11 24       	eor	r1, r1
    1714:	c8 de       	rcall	.-624    	; 0x14a6 <playToneBackend>
    1716:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
					musicPosition++;
    171a:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <_edata+0x1>
    171e:	01 96       	adiw	r24, 0x01	; 1
    1720:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <_edata+0x1>
    1724:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <_edata>
    1728:	18 2d       	mov	r17, r8
    172a:	06 c0       	rjmp	.+12     	; 0x1738 <main+0x27c>
				}
			}
		}else{
			clearDebuggingLed();
    172c:	13 de       	rcall	.-986    	; 0x1354 <clearDebuggingLed>
    172e:	80 e0       	ldi	r24, 0x00	; 0
			setPWM(0);
    1730:	90 e0       	ldi	r25, 0x00	; 0
    1732:	30 de       	rcall	.-928    	; 0x1394 <setPWM>
    1734:	01 c0       	rjmp	.+2      	; 0x1738 <main+0x27c>
    1736:	18 2d       	mov	r17, r8
    1738:	88 95       	sleep
    173a:	e1 ce       	rjmp	.-574    	; 0x14fe <main+0x42>
		}
		/* Set CPU to sleep mode. */
		sleep_cpu();
    173c:	e1 2c       	mov	r14, r1
	}
    173e:	f1 2c       	mov	r15, r1
			}
		} else {	// state == PLAY
			if (debounceBtnOnOff >= 2*DEBOUNCELIMIT) {
				state = STOP;
				debounceBtnOnOff = 0;
				debounceBtnSong = 0;
    1740:	c0 e0       	ldi	r28, 0x00	; 0
    1742:	d0 e0       	ldi	r29, 0x00	; 0
				musicPosition = 0;
			}
		} else {	// state == PLAY
			if (debounceBtnOnOff >= 2*DEBOUNCELIMIT) {
				state = STOP;
				debounceBtnOnOff = 0;
    1744:	19 2d       	mov	r17, r9
    1746:	f2 cf       	rjmp	.-28     	; 0x172c <main+0x270>

00001748 <__udivmodsi4>:
						songSize = music[SONG_E][0];
						break;
					case SONG_F:
						currentFrequency = pgm_read_word(&music[SONG_F][2*musicPosition+1]);
						currentDuration =  pgm_read_word(&music[SONG_F][2*musicPosition+2]);
						songSize = music[SONG_F][0];
    1748:	a1 e2       	ldi	r26, 0x21	; 33
    174a:	1a 2e       	mov	r1, r26
    174c:	aa 1b       	sub	r26, r26
    174e:	bb 1b       	sub	r27, r27
    1750:	fd 01       	movw	r30, r26
    1752:	0d c0       	rjmp	.+26     	; 0x176e <__udivmodsi4_ep>

00001754 <__udivmodsi4_loop>:
    1754:	aa 1f       	adc	r26, r26
    1756:	bb 1f       	adc	r27, r27
    1758:	ee 1f       	adc	r30, r30
    175a:	ff 1f       	adc	r31, r31
    175c:	a2 17       	cp	r26, r18
    175e:	b3 07       	cpc	r27, r19
    1760:	e4 07       	cpc	r30, r20
    1762:	f5 07       	cpc	r31, r21
    1764:	20 f0       	brcs	.+8      	; 0x176e <__udivmodsi4_ep>
    1766:	a2 1b       	sub	r26, r18
    1768:	b3 0b       	sbc	r27, r19
    176a:	e4 0b       	sbc	r30, r20
    176c:	f5 0b       	sbc	r31, r21

0000176e <__udivmodsi4_ep>:
    176e:	66 1f       	adc	r22, r22
    1770:	77 1f       	adc	r23, r23
    1772:	88 1f       	adc	r24, r24
    1774:	99 1f       	adc	r25, r25
    1776:	1a 94       	dec	r1
    1778:	69 f7       	brne	.-38     	; 0x1754 <__udivmodsi4_loop>
    177a:	60 95       	com	r22
    177c:	70 95       	com	r23
    177e:	80 95       	com	r24
    1780:	90 95       	com	r25
    1782:	9b 01       	movw	r18, r22
    1784:	ac 01       	movw	r20, r24
    1786:	bd 01       	movw	r22, r26
    1788:	cf 01       	movw	r24, r30
    178a:	08 95       	ret

0000178c <__umulhisi3>:
    178c:	a2 9f       	mul	r26, r18
    178e:	b0 01       	movw	r22, r0
    1790:	b3 9f       	mul	r27, r19
    1792:	c0 01       	movw	r24, r0
    1794:	a3 9f       	mul	r26, r19
    1796:	70 0d       	add	r23, r0
    1798:	81 1d       	adc	r24, r1
    179a:	11 24       	eor	r1, r1
    179c:	91 1d       	adc	r25, r1
    179e:	b2 9f       	mul	r27, r18
    17a0:	70 0d       	add	r23, r0
    17a2:	81 1d       	adc	r24, r1
    17a4:	11 24       	eor	r1, r1
    17a6:	91 1d       	adc	r25, r1
    17a8:	08 95       	ret

000017aa <_exit>:
    17aa:	f8 94       	cli

000017ac <__stop_program>:
    17ac:	ff cf       	rjmp	.-2      	; 0x17ac <__stop_program>
